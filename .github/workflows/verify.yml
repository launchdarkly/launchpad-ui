name: Verify changes

on:
  pull_request:
    branches-ignore:
      - 'changeset-release/**'

jobs:
  branch-info:
    name: Branch Info
    runs-on: ubuntu-latest
    steps:
      - name: Get base branch
        id: get-base-branch
        run: |
          if [[ "${{github.event.pull_request.base.ref}}" != "" ]]; then
            echo "BRANCH=${{github.event.pull_request.base.ref}}" >> $GITHUB_OUTPUT
          else
            echo "BRANCH=main" >> $GITHUB_OUTPUT
          fi
    outputs:
      base-branch: ${{ steps.get-base-branch.outputs.BRANCH }}

  lint:
    name: Lint
    needs: [branch-info]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{needs.branch-info.outputs.base-branch}}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint:ci

  test:
    name: Test
    needs: [branch-info]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{needs.branch-info.outputs.base-branch}}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Test
        run: pnpm test:packages

  e2e:
    name: e2e
    needs: [branch-info]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{needs.branch-info.outputs.base-branch}}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Get Cypress Version
        id: get-version
        run: |
          echo "VERSION=$(pnpm cypress version --component package)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Cypress Binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ steps.get-version.outputs.VERSION }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: SSR
        run: pnpm e2e:ssr

  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Get Cypress Version
        id: get-version
        run: |
          echo "VERSION=$(pnpm cypress version --component package)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Cypress Binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ steps.get-version.outputs.VERSION }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Cypress
        run: pnpm cypress:component
        env:
          FORCE_COLOR: 1

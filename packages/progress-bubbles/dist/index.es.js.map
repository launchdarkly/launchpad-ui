{"version":3,"file":"index.es.js","sources":["../src/utils.ts","../src/ProgressBubbles.tsx"],"sourcesContent":["import { useCallback, useLayoutEffect, useState } from 'react';\n\ntype Dimensions = {\n  width: number;\n  height: number;\n};\n\ntype UseDimensionsProps = {\n  defaults?: Partial<Dimensions>;\n};\n\nexport function useDimensions<T extends HTMLElement>({ defaults }: UseDimensionsProps = {}) {\n  const [node, setNode] = useState<T | null>(null);\n  const [dimensions, setDimensions] = useState<Dimensions>({\n    width: 0,\n    height: 0,\n    ...defaults,\n  });\n\n  const ref = useCallback((nextNode: T | null) => setNode(nextNode), []);\n\n  function measureDimensions(element: HTMLElement) {\n    const rect = element.getBoundingClientRect();\n\n    setDimensions({\n      width: rect.width,\n      height: rect.height,\n    });\n  }\n\n  useLayoutEffect(() => {\n    if (!node) {\n      return;\n    }\n\n    const observer = new ResizeObserver(() => {\n      measureDimensions(node);\n    });\n\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [node]);\n\n  return {\n    ref,\n    dimensions,\n  };\n}\n\nexport type { Dimensions, UseDimensionsProps };\n","import type { Offset, PopoverProps } from '@launchpad-ui/popover';\n\nimport { Popover } from '@launchpad-ui/popover';\nimport { cx } from 'classix';\nimport { Fragment } from 'react';\n\nimport styles from './styles/ProgressBubbles.module.css';\nimport { useDimensions } from './utils';\n\nconst ICON_WIDTH = 2.8;\n\ntype ProgressBubbleInfo = {\n  label: string;\n  icons?: JSX.Element;\n  popover?: JSX.Element;\n  popoverOffset?: Offset;\n  isWarning?: boolean;\n  stageId?: string;\n};\n\ntype ProgressBubblesProps = {\n  numBubbles?: number;\n  currentBubble: number;\n  bubbleLabels?: string[];\n  showCurrentLabelOnly?: boolean;\n  vertical?: boolean;\n  className?: string;\n  items?: ProgressBubbleInfo[];\n  popoverInteraction?: PopoverProps['interactionKind'];\n  'data-test-id'?: string;\n};\n\nconst ProgressBubbles = ({\n  className,\n  vertical,\n  numBubbles,\n  currentBubble,\n  bubbleLabels,\n  showCurrentLabelOnly = true,\n  items,\n  popoverInteraction = 'hover-or-focus',\n  'data-test-id': testId = 'progress-bubbles',\n}: ProgressBubblesProps) => {\n  const { ref, dimensions } = useDimensions();\n  let children = [];\n\n  if (items && items.length) {\n    children = items.map((item, idx) => {\n      // If multiple icons exist, then children is populated on props\n      const hasMultipleIcons =\n        item.icons && item.icons.props.children && item.icons.props.children.length;\n      let numIcons = 0;\n      if (item.icons) {\n        numIcons = hasMultipleIcons ? item.icons.props.children.length : 1;\n      }\n      const iconWidth = hasMultipleIcons ? numIcons * ICON_WIDTH : ICON_WIDTH;\n      const labelWidth = dimensions.width / items.length;\n      const hideLabel = showCurrentLabelOnly && idx !== currentBubble;\n\n      const bubble = (\n        <div\n          className={cx(\n            styles['ProgressBubbles-icon'],\n            hasMultipleIcons && styles['ProgressBubbles-icon--multiple'],\n            idx === currentBubble && styles['ProgressBubbles-icon--current'],\n            idx > currentBubble && styles['ProgressBubbles-icon--pending'],\n            item.isWarning && styles['ProgressBubbles-icon--warning']\n          )}\n          style={{ width: `${iconWidth}rem` }}\n        >\n          {item.icons}\n          <label\n            id={item.popover?.props.stageId}\n            aria-hidden={hideLabel}\n            className={styles['ProgressBubbles-label']}\n            style={{ width: `${labelWidth}px` }}\n          >\n            {showCurrentLabelOnly ? idx === currentBubble && item.label : item.label}\n          </label>\n        </div>\n      );\n\n      return (\n        <Fragment key={idx}>\n          {!!idx && (\n            <div\n              className={cx(\n                styles['ProgressBubblesUsingItems-line'],\n                idx <= currentBubble && styles['ProgressBubblesUsingItems-line--completed']\n              )}\n            />\n          )}\n          <div className={styles['ProgressBubblesIconContainer']}>\n            {item.popover ? (\n              <Popover\n                targetClassName={styles['ProgressBubblesPopoverTarget']}\n                restrictWidth={false}\n                interactionKind={popoverInteraction}\n                offset={item.popoverOffset}\n                target={item.icons}\n              >\n                <div role=\"button\" tabIndex={0}>\n                  {bubble}\n                </div>\n                {item.popover}\n              </Popover>\n            ) : (\n              bubble\n            )}\n          </div>\n        </Fragment>\n      );\n    });\n  } else if (numBubbles) {\n    for (let i = 0; i < numBubbles; i++) {\n      children.push(\n        <Fragment key={i}>\n          {!!i && (\n            <div\n              className={cx(\n                styles['ProgressBubbles-line'],\n                i <= currentBubble && styles['ProgressBubbles--filled']\n              )}\n            ></div>\n          )}\n          <div\n            className={cx(\n              styles['ProgressBubbles-bubble'],\n              i <= currentBubble && styles['ProgressBubbles--filled'],\n              i === 0 && styles['ProgressBubbles-bubble--first'],\n              i === numBubbles - 1 && styles['ProgressBubbles-bubble--last']\n            )}\n          >\n            <span className={styles['ProgressBubbles-text']}>\n              {!!bubbleLabels &&\n                (showCurrentLabelOnly\n                  ? i === currentBubble && bubbleLabels[currentBubble]\n                  : bubbleLabels[i])}\n            </span>\n          </div>\n        </Fragment>\n      );\n    }\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.ProgressBubbles,\n        className,\n        vertical && styles['ProgressBubbles--vertical']\n      )}\n      ref={ref}\n      data-test-id={testId}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport { ProgressBubbles };\nexport type { ProgressBubbleInfo, ProgressBubblesProps };\n"],"names":["ICON_WIDTH","ProgressBubbles","className","vertical","numBubbles","currentBubble","bubbleLabels","showCurrentLabelOnly","items","popoverInteraction","testId","ref","dimensions","useDimensions","children","length","map","item","idx","hasMultipleIcons","icons","props","numIcons","iconWidth","labelWidth","width","hideLabel","bubble","cx","styles","isWarning","popover","stageId","label","_jsx","_jsxs","popoverOffset","i","push"],"mappings":"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"}
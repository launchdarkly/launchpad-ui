{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/ProgressBubbles.tsx"],"sourcesContent":["import { useCallback, useLayoutEffect, useState } from 'react';\n\ntype Dimensions = {\n  width: number;\n  height: number;\n};\n\ntype UseDimensionsProps = {\n  defaults?: Partial<Dimensions>;\n};\n\nexport function useDimensions<T extends HTMLElement>({ defaults }: UseDimensionsProps = {}) {\n  const [node, setNode] = useState<T | null>(null);\n  const [dimensions, setDimensions] = useState<Dimensions>({\n    width: 0,\n    height: 0,\n    ...defaults,\n  });\n\n  const ref = useCallback((nextNode: T | null) => setNode(nextNode), []);\n\n  function measureDimensions(element: HTMLElement) {\n    const rect = element.getBoundingClientRect();\n\n    setDimensions({\n      width: rect.width,\n      height: rect.height,\n    });\n  }\n\n  useLayoutEffect(() => {\n    if (!node) {\n      return;\n    }\n\n    const observer = new ResizeObserver(() => {\n      measureDimensions(node);\n    });\n\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [node]);\n\n  return {\n    ref,\n    dimensions,\n  };\n}\n\nexport type { Dimensions, UseDimensionsProps };\n","import type { Offset, PopoverProps } from '@launchpad-ui/popover';\n\nimport { Popover } from '@launchpad-ui/popover';\nimport { cx } from 'classix';\nimport { Fragment } from 'react';\n\nimport styles from './styles/ProgressBubbles.module.css';\nimport { useDimensions } from './utils';\n\nconst ICON_WIDTH = 2.8;\n\ntype ProgressBubbleInfo = {\n  label: string;\n  icons?: JSX.Element;\n  popover?: JSX.Element;\n  popoverOffset?: Offset;\n  isWarning?: boolean;\n  stageId?: string;\n};\n\ntype ProgressBubblesProps = {\n  numBubbles?: number;\n  currentBubble: number;\n  bubbleLabels?: string[];\n  showCurrentLabelOnly?: boolean;\n  vertical?: boolean;\n  className?: string;\n  items?: ProgressBubbleInfo[];\n  popoverInteraction?: PopoverProps['interactionKind'];\n  'data-test-id'?: string;\n};\n\nconst ProgressBubbles = ({\n  className,\n  vertical,\n  numBubbles,\n  currentBubble,\n  bubbleLabels,\n  showCurrentLabelOnly = true,\n  items,\n  popoverInteraction = 'hover-or-focus',\n  'data-test-id': testId = 'progress-bubbles',\n}: ProgressBubblesProps) => {\n  const { ref, dimensions } = useDimensions();\n  let children = [];\n\n  if (items && items.length) {\n    children = items.map((item, idx) => {\n      // If multiple icons exist, then children is populated on props\n      const hasMultipleIcons =\n        item.icons && item.icons.props.children && item.icons.props.children.length;\n      let numIcons = 0;\n      if (item.icons) {\n        numIcons = hasMultipleIcons ? item.icons.props.children.length : 1;\n      }\n      const iconWidth = hasMultipleIcons ? numIcons * ICON_WIDTH : ICON_WIDTH;\n      const labelWidth = dimensions.width / items.length;\n      const hideLabel = showCurrentLabelOnly && idx !== currentBubble;\n\n      const bubble = (\n        <div\n          className={cx(\n            styles['ProgressBubbles-icon'],\n            hasMultipleIcons && styles['ProgressBubbles-icon--multiple'],\n            idx === currentBubble && styles['ProgressBubbles-icon--current'],\n            idx > currentBubble && styles['ProgressBubbles-icon--pending'],\n            item.isWarning && styles['ProgressBubbles-icon--warning']\n          )}\n          style={{ width: `${iconWidth}rem` }}\n        >\n          {item.icons}\n          <label\n            id={item.popover?.props.stageId}\n            aria-hidden={hideLabel}\n            className={styles['ProgressBubbles-label']}\n            style={{ width: `${labelWidth}px` }}\n          >\n            {showCurrentLabelOnly ? idx === currentBubble && item.label : item.label}\n          </label>\n        </div>\n      );\n\n      return (\n        <Fragment key={idx}>\n          {!!idx && (\n            <div\n              className={cx(\n                styles['ProgressBubblesUsingItems-line'],\n                idx <= currentBubble && styles['ProgressBubblesUsingItems-line--completed']\n              )}\n            />\n          )}\n          <div className={styles['ProgressBubblesIconContainer']}>\n            {item.popover ? (\n              <Popover\n                targetClassName={styles['ProgressBubblesPopoverTarget']}\n                restrictWidth={false}\n                interactionKind={popoverInteraction}\n                offset={item.popoverOffset}\n                target={item.icons}\n              >\n                <div role=\"button\" tabIndex={0}>\n                  {bubble}\n                </div>\n                {item.popover}\n              </Popover>\n            ) : (\n              bubble\n            )}\n          </div>\n        </Fragment>\n      );\n    });\n  } else if (numBubbles) {\n    for (let i = 0; i < numBubbles; i++) {\n      children.push(\n        <Fragment key={i}>\n          {!!i && (\n            <div\n              className={cx(\n                styles['ProgressBubbles-line'],\n                i <= currentBubble && styles['ProgressBubbles--filled']\n              )}\n            ></div>\n          )}\n          <div\n            className={cx(\n              styles['ProgressBubbles-bubble'],\n              i <= currentBubble && styles['ProgressBubbles--filled'],\n              i === 0 && styles['ProgressBubbles-bubble--first'],\n              i === numBubbles - 1 && styles['ProgressBubbles-bubble--last']\n            )}\n          >\n            <span className={styles['ProgressBubbles-text']}>\n              {!!bubbleLabels &&\n                (showCurrentLabelOnly\n                  ? i === currentBubble && bubbleLabels[currentBubble]\n                  : bubbleLabels[i])}\n            </span>\n          </div>\n        </Fragment>\n      );\n    }\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.ProgressBubbles,\n        className,\n        vertical && styles['ProgressBubbles--vertical']\n      )}\n      ref={ref}\n      data-test-id={testId}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport { ProgressBubbles };\nexport type { ProgressBubbleInfo, ProgressBubblesProps };\n"],"names":["useState","useCallback","useLayoutEffect","jsxs","cx","jsx","Fragment","Popover"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWO,SAAS,cAAqC,EAAE,SAAS,IAAwB,IAAI;AAC1F,QAAM,CAAC,MAAM,OAAO,IAAIA,eAAmB,IAAI;AAC/C,QAAM,CAAC,YAAY,aAAa,IAAIA,eAAqB;AAAA,IACvD,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,GAAG;AAAA,EAAA,CACJ;AAEK,QAAA,MAAMC,MAAAA,YAAY,CAAC,aAAuB,QAAQ,QAAQ,GAAG,CAAA,CAAE;AAErE,WAAS,kBAAkB,SAAsB;AACzC,UAAA,OAAO,QAAQ;AAEP,kBAAA;AAAA,MACZ,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,IAAA,CACd;AAAA,EACH;AAEAC,QAAAA,gBAAgB,MAAM;AACpB,QAAI,CAAC,MAAM;AACT;AAAA,IACF;AAEM,UAAA,WAAW,IAAI,eAAe,MAAM;AACxC,wBAAkB,IAAI;AAAA,IAAA,CACvB;AAED,aAAS,QAAQ,IAAI;AAEd,WAAA,MAAM,SAAS;EAAW,GAChC,CAAC,IAAI,CAAC;AAEF,SAAA;AAAA,IACL;AAAA,IACA;AAAA,EAAA;AAEJ;ACvCA,MAAM,aAAa;AAuBnB,MAAM,kBAAkB,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,uBAAuB;AAAA,EACvB;AAAA,EACA,qBAAqB;AAAA,EACrB,gBAAgB,SAAS;AAC3B,MAA4B;AAC1B,QAAM,EAAE,KAAK,WAAW,IAAI,cAAc;AAC1C,MAAI,WAAW,CAAA;AAEX,MAAA,SAAS,MAAM,QAAQ;AACzB,eAAW,MAAM,IAAI,CAAC,MAAM,QAAQ;;AAE5B,YAAA,mBACJ,KAAK,SAAS,KAAK,MAAM,MAAM,YAAY,KAAK,MAAM,MAAM,SAAS;AACvE,UAAI,WAAW;AACf,UAAI,KAAK,OAAO;AACd,mBAAW,mBAAmB,KAAK,MAAM,MAAM,SAAS,SAAS;AAAA,MACnE;AACM,YAAA,YAAY,mBAAmB,WAAW,aAAa;AACvD,YAAA,aAAa,WAAW,QAAQ,MAAM;AACtC,YAAA,YAAY,wBAAwB,QAAQ;AAElD,YAAM,SACJC,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAWC,QAAA;AAAA,YACT,OAAO;AAAA,YACP,oBAAoB,OAAO;AAAA,YAC3B,QAAQ,iBAAiB,OAAO;AAAA,YAChC,MAAM,iBAAiB,OAAO;AAAA,YAC9B,KAAK,aAAa,OAAO;AAAA,UAC3B;AAAA,UACA,OAAO,EAAE,OAAO,GAAG,eAAe;AAAA,UAEjC,UAAA;AAAA,YAAK,KAAA;AAAA,YACNC,2BAAA;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,KAAI,UAAK,YAAL,mBAAc,MAAM;AAAA,gBACxB,eAAa;AAAA,gBACb,WAAW,OAAO;AAAA,gBAClB,OAAO,EAAE,OAAO,GAAG,eAAe;AAAA,gBAEjC,UAAuB,uBAAA,QAAQ,iBAAiB,KAAK,QAAQ,KAAK;AAAA,cAAA;AAAA,YACrE;AAAA,UAAA;AAAA,QAAA;AAAA,MAAA;AAIJ,6CACGC,gBACE,EAAA,UAAA;AAAA,QAAA,CAAC,CAAC,OACDD,2BAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAWD,QAAA;AAAA,cACT,OAAO;AAAA,cACP,OAAO,iBAAiB,OAAO;AAAA,YACjC;AAAA,UAAA;AAAA,QACF;AAAA,uCAED,OAAI,EAAA,WAAW,OAAO,iCACpB,eAAK,UACJD,2BAAA;AAAA,UAACI,QAAA;AAAA,UAAA;AAAA,YACC,iBAAiB,OAAO;AAAA,YACxB,eAAe;AAAA,YACf,iBAAiB;AAAA,YACjB,QAAQ,KAAK;AAAA,YACb,QAAQ,KAAK;AAAA,YAEb,UAAA;AAAA,cAAAF,+BAAC,OAAI,EAAA,MAAK,UAAS,UAAU,GAC1B,UACH,QAAA;AAAA,cACC,KAAK;AAAA,YAAA;AAAA,UAAA;AAAA,YAGR,OAEJ,CAAA;AAAA,MAAA,EAAA,GA1Ba,GA2Bf;AAAA,IAAA,CAEH;AAAA,aACQ,YAAY;AACrB,aAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AAC1B,eAAA;AAAA,wCACNC,MAAAA,UACE,EAAA,UAAA;AAAA,UAAA,CAAC,CAAC,KACDD,2BAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,QAAA;AAAA,gBACT,OAAO;AAAA,gBACP,KAAK,iBAAiB,OAAO;AAAA,cAC/B;AAAA,YAAA;AAAA,UACD;AAAA,UAEHC,2BAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWD,QAAA;AAAA,gBACT,OAAO;AAAA,gBACP,KAAK,iBAAiB,OAAO;AAAA,gBAC7B,MAAM,KAAK,OAAO;AAAA,gBAClB,MAAM,aAAa,KAAK,OAAO;AAAA,cACjC;AAAA,cAEA,UAACC,2BAAAA,IAAA,QAAA,EAAK,WAAW,OAAO,yBACrB,UAAC,CAAA,CAAC,iBACA,uBACG,MAAM,iBAAiB,aAAa,iBACpC,aAAa,KACrB;AAAA,YAAA;AAAA,UACF;AAAA,QAAA,EAAA,GAvBa,CAwBf;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAGE,SAAAA,2BAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWD,QAAA;AAAA,QACT,OAAO;AAAA,QACP;AAAA,QACA,YAAY,OAAO;AAAA,MACrB;AAAA,MACA;AAAA,MACA,gBAAc;AAAA,MAEb;AAAA,IAAA;AAAA,EAAA;AAGP;;"}
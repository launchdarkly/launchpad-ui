{"version":3,"file":"index.es.js","sources":["../src/PaginationButton.tsx","../src/PaginationText.tsx","../src/Pagination.tsx"],"sourcesContent":["import { IconButton } from '@launchpad-ui/button';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  KeyboardDoubleArrowLeft,\n  KeyboardDoubleArrowRight,\n} from '@launchpad-ui/icons';\nimport { cx } from 'classix';\n\nimport styles from './styles/Pagination.module.css';\n\ntype PaginationChange = 'first' | 'prev' | 'next' | 'last';\n\ntype PaginationButtonProps<T = PaginationChange> = {\n  resourceName: string;\n  kind: PaginationChange;\n  disabled: boolean;\n  onClick: (change: T) => void;\n  className?: string;\n  'data-test-id'?: string;\n};\n\nconst ICON_MAP = {\n  first: KeyboardDoubleArrowLeft,\n  prev: ChevronLeft,\n  next: ChevronRight,\n  last: KeyboardDoubleArrowRight,\n};\n\nconst LABEL_MAP: { [key in PaginationChange]: string } = {\n  first: 'first',\n  prev: 'previous',\n  next: 'next',\n  last: 'last',\n};\n\nconst PaginationButton = ({\n  resourceName,\n  kind,\n  disabled,\n  onClick,\n  className,\n  'data-test-id': testId = 'pagination-button',\n}: PaginationButtonProps) => {\n  const classes = cx(\n    styles.PaginationButton,\n    disabled && styles['PaginationButton--disabled'],\n    className\n  );\n\n  const Icon = ICON_MAP[kind];\n\n  const label = `${LABEL_MAP[kind]} ${resourceName} page`;\n\n  return (\n    <IconButton\n      disabled={disabled}\n      className={classes}\n      data-test-id={testId}\n      onClick={() => onClick(kind)}\n      icon={<Icon size=\"small\" />}\n      aria-label={label}\n    />\n  );\n};\n\nexport { PaginationButton };\nexport type { PaginationButtonProps, PaginationChange };\n","import { Progress } from '@launchpad-ui/progress';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\n\nimport styles from './styles/Pagination.module.css';\n\ntype PaginationTextProps = {\n  currentOffset: number;\n  pageSize: number;\n  isReady: boolean;\n  totalCount: number;\n  'data-test-id'?: string;\n};\n\nconst PaginationText = ({\n  currentOffset,\n  pageSize,\n  isReady,\n  totalCount,\n  'data-test-id': testId = 'pagination-text',\n}: PaginationTextProps) => {\n  const offset = Math.max(0, currentOffset || 0);\n  const from = offset + 1;\n  const to = totalCount && Math.min(offset + pageSize, totalCount);\n\n  if (!isReady) {\n    return (\n      <div>\n        <Progress />\n      </div>\n    );\n  }\n\n  if (!totalCount) {\n    return <strong>No results</strong>;\n  }\n\n  const screenReaderLabel = `Viewing records ${from} through ${to} of ${totalCount} total.`;\n\n  return (\n    <div className={styles.PaginationText} data-test-id={testId}>\n      <VisuallyHidden>{screenReaderLabel}</VisuallyHidden>\n      <span aria-hidden>\n        <strong>\n          {from}-{to}\n        </strong>{' '}\n        of <strong>{totalCount}</strong>\n      </span>\n    </div>\n  );\n};\n\nexport { PaginationText };\nexport type { PaginationTextProps };\n","import type { PaginationChange } from './PaginationButton';\nimport type { HTMLAttributes } from 'react';\n\nimport { cx } from 'classix';\n\nimport { PaginationButton } from './PaginationButton';\nimport { PaginationText } from './PaginationText';\nimport styles from './styles/Pagination.module.css';\n\ntype PaginationProps = HTMLAttributes<HTMLElement> & {\n  resourceName: string;\n  isFirstDisabled?: boolean;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLastDisabled?: boolean;\n  onChange: (change: PaginationChange) => void;\n  currentOffset: number;\n  pageSize: number;\n  isReady: boolean;\n  totalCount: number;\n  'data-test-id'?: string;\n};\n\nconst Pagination = ({\n  className,\n  resourceName,\n  isFirstDisabled,\n  isPrevDisabled,\n  isNextDisabled,\n  isLastDisabled,\n  onChange,\n  currentOffset,\n  pageSize,\n  isReady,\n  totalCount,\n  'aria-label': ariaLabel,\n  'data-test-id': testId = 'pagination',\n  ...rest\n}: PaginationProps) => {\n  return (\n    <nav\n      {...rest}\n      className={cx(styles.Pagination, className)}\n      aria-label={ariaLabel ?? `Pagination for ${resourceName} list.`}\n      data-test-id={testId}\n    >\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"first\"\n        disabled={!!isFirstDisabled}\n        onClick={onChange}\n      />\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"prev\"\n        disabled={!!isPrevDisabled}\n        onClick={onChange}\n      />\n      <PaginationText\n        currentOffset={currentOffset}\n        pageSize={pageSize}\n        isReady={isReady}\n        totalCount={totalCount}\n      />\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"next\"\n        disabled={!!isNextDisabled}\n        onClick={onChange}\n      />\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"last\"\n        disabled={!!isLastDisabled}\n        onClick={onChange}\n      />\n    </nav>\n  );\n};\n\nexport { Pagination };\nexport type { PaginationProps };\n"],"names":[],"mappings":"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"}
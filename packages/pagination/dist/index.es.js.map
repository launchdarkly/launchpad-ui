{"version":3,"file":"index.es.js","sources":["../src/PaginationButton.tsx","../src/PaginationText.tsx","../src/Pagination.tsx"],"sourcesContent":["import { IconButton } from '@launchpad-ui/button';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  KeyboardDoubleArrowLeft,\n  KeyboardDoubleArrowRight,\n} from '@launchpad-ui/icons';\nimport { cx } from 'classix';\n\nimport styles from './styles/Pagination.module.css';\n\ntype PaginationChange = 'first' | 'prev' | 'next' | 'last';\n\ntype PaginationButtonProps<T = PaginationChange> = {\n  resourceName: string;\n  kind: PaginationChange;\n  disabled: boolean;\n  onClick: (change: T) => void;\n  className?: string;\n  'data-test-id'?: string;\n};\n\nconst ICON_MAP = {\n  first: KeyboardDoubleArrowLeft,\n  prev: ChevronLeft,\n  next: ChevronRight,\n  last: KeyboardDoubleArrowRight,\n};\n\nconst LABEL_MAP: { [key in PaginationChange]: string } = {\n  first: 'first',\n  prev: 'previous',\n  next: 'next',\n  last: 'last',\n};\n\nconst PaginationButton = ({\n  resourceName,\n  kind,\n  disabled,\n  onClick,\n  className,\n  'data-test-id': testId = 'pagination-button',\n}: PaginationButtonProps) => {\n  const classes = cx(\n    styles.PaginationButton,\n    disabled && styles['PaginationButton--disabled'],\n    className\n  );\n\n  const Icon = ICON_MAP[kind];\n\n  const label = `${LABEL_MAP[kind]} ${resourceName} page`;\n\n  return (\n    <IconButton\n      disabled={disabled}\n      className={classes}\n      data-test-id={testId}\n      onClick={() => onClick(kind)}\n      icon={<Icon size=\"small\" />}\n      aria-label={label}\n    />\n  );\n};\n\nexport { PaginationButton };\nexport type { PaginationButtonProps, PaginationChange };\n","import { Progress } from '@launchpad-ui/progress';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\n\nimport styles from './styles/Pagination.module.css';\n\ntype PaginationTextProps = {\n  currentOffset: number;\n  pageSize: number;\n  isReady: boolean;\n  totalCount: number;\n  'data-test-id'?: string;\n};\n\nconst PaginationText = ({\n  currentOffset,\n  pageSize,\n  isReady,\n  totalCount,\n  'data-test-id': testId = 'pagination-text',\n}: PaginationTextProps) => {\n  const offset = Math.max(0, currentOffset || 0);\n  const from = offset + 1;\n  const to = totalCount && Math.min(offset + pageSize, totalCount);\n\n  if (!isReady) {\n    return (\n      <div>\n        <Progress />\n      </div>\n    );\n  }\n\n  if (!totalCount) {\n    return <strong>No results</strong>;\n  }\n\n  const screenReaderLabel = `Viewing records ${from} through ${to} of ${totalCount} total.`;\n\n  return (\n    <div className={styles.PaginationText} data-test-id={testId}>\n      <VisuallyHidden>{screenReaderLabel}</VisuallyHidden>\n      <span aria-hidden>\n        <strong>\n          {from}-{to}\n        </strong>{' '}\n        of <strong>{totalCount}</strong>\n      </span>\n    </div>\n  );\n};\n\nexport { PaginationText };\nexport type { PaginationTextProps };\n","import type { PaginationChange } from './PaginationButton';\nimport type { HTMLAttributes } from 'react';\n\nimport { cx } from 'classix';\n\nimport { PaginationButton } from './PaginationButton';\nimport { PaginationText } from './PaginationText';\nimport styles from './styles/Pagination.module.css';\n\ntype PaginationProps = HTMLAttributes<HTMLElement> & {\n  resourceName: string;\n  isFirstDisabled?: boolean;\n  isPrevDisabled?: boolean;\n  isNextDisabled?: boolean;\n  isLastDisabled?: boolean;\n  onChange: (change: PaginationChange) => void;\n  currentOffset: number;\n  pageSize: number;\n  isReady: boolean;\n  totalCount: number;\n  'data-test-id'?: string;\n};\n\nconst Pagination = ({\n  className,\n  resourceName,\n  isFirstDisabled,\n  isPrevDisabled,\n  isNextDisabled,\n  isLastDisabled,\n  onChange,\n  currentOffset,\n  pageSize,\n  isReady,\n  totalCount,\n  'aria-label': ariaLabel,\n  'data-test-id': testId = 'pagination',\n  ...rest\n}: PaginationProps) => {\n  return (\n    <nav\n      {...rest}\n      className={cx(styles.Pagination, className)}\n      aria-label={ariaLabel ?? `Pagination for ${resourceName} list.`}\n      data-test-id={testId}\n    >\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"first\"\n        disabled={!!isFirstDisabled}\n        onClick={onChange}\n      />\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"prev\"\n        disabled={!!isPrevDisabled}\n        onClick={onChange}\n      />\n      <PaginationText\n        currentOffset={currentOffset}\n        pageSize={pageSize}\n        isReady={isReady}\n        totalCount={totalCount}\n      />\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"next\"\n        disabled={!!isNextDisabled}\n        onClick={onChange}\n      />\n      <PaginationButton\n        resourceName={resourceName}\n        kind=\"last\"\n        disabled={!!isLastDisabled}\n        onClick={onChange}\n      />\n    </nav>\n  );\n};\n\nexport { Pagination };\nexport type { PaginationProps };\n"],"names":["ICON_MAP","first","KeyboardDoubleArrowLeft","prev","ChevronLeft","next","ChevronRight","last","KeyboardDoubleArrowRight","LABEL_MAP","PaginationButton","resourceName","kind","disabled","onClick","className","testId","classes","cx","styles","Icon","label","PaginationText","currentOffset","pageSize","isReady","totalCount","offset","Math","max","from","to","min","_jsx","screenReaderLabel","_jsxs","Pagination","isFirstDisabled","isPrevDisabled","isNextDisabled","isLastDisabled","onChange","ariaLabel","rest"],"mappings":"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"}
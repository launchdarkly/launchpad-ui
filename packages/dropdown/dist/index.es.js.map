{"version":3,"file":"index.es.js","sources":["../src/Dropdown.tsx","../src/DropdownButton.tsx"],"sourcesContent":["import type { PopoverProps } from '@launchpad-ui/popover';\nimport type { ReactElement } from 'react';\n\nimport { Popover } from '@launchpad-ui/popover';\nimport { cx } from 'classix';\nimport { Children, cloneElement, useEffect, useRef, useState } from 'react';\n\ntype DropdownState = {\n  isOpen?: boolean;\n};\n\ntype DropdownProps<T extends string | object | number> = PopoverProps & {\n  onSelect?: (item: T, stateChanges: DropdownState) => void;\n  onStateChange?: (state: DropdownState) => void;\n};\n\nconst Dropdown = <T extends string | object | number>(props: DropdownProps<T>) => {\n  const {\n    placement,\n    disabled,\n    targetClassName,\n    popoverClassName,\n    isOpen: isOpenProp,\n    onInteraction,\n    onSelect,\n    onStateChange,\n    children,\n    'data-test-id': testId = 'dropdown',\n    ...rest\n  } = props;\n\n  const triggerRef = useRef<HTMLElement>(null);\n  const [isOpen, setIsOpen] = useState(isOpenProp ?? false);\n  const [hasOpened, setHasOpened] = useState(isOpen);\n\n  useEffect(() => {\n    if (isOpenProp !== undefined) {\n      setIsOpen(isOpenProp);\n    }\n  }, [isOpenProp]);\n\n  useEffect(() => {\n    // Focus the button upon closing for convenient tabbing\n    if (hasOpened && isOpen === false) {\n      setTimeout(() => {\n        const current = triggerRef.current;\n        if (!current) {\n          return;\n        }\n\n        // If a dropdown menu item triggers a modal, we do not want to focus the trigger. Instead\n        // we let the modal components control their own focus.\n        // Note that this is not ideal since closing the modal will not cause the dropdown trigger\n        // to regain focus.\n        const hasModal = current.closest?.('.has-overlay');\n\n        !hasModal && current.focus?.();\n      });\n    }\n  }, [isOpen, hasOpened]);\n\n  useEffect(() => {\n    setHasOpened(isOpen);\n    onStateChange?.({ isOpen });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  const renderTrigger = () => {\n    return cloneElement(parseChildren().target, {\n      'aria-haspopup': true,\n      'aria-expanded': isOpen ? true : false,\n      ref: triggerRef,\n      isopen: isOpen?.toString(),\n    });\n  };\n\n  const renderContent = () => {\n    return cloneElement(parseChildren().content, {\n      onSelect: handleSelect,\n    });\n  };\n\n  const handleSelect = (item: T) => {\n    setIsOpen(false);\n    onSelect?.(item, { isOpen: false });\n  };\n\n  const handlePopoverInteraction = (nextIsOpen: boolean) => {\n    setIsOpen(nextIsOpen);\n  };\n\n  const parseChildren = () => {\n    const [targetChild, contentChild] = Children.toArray(children);\n    return {\n      target: targetChild as ReactElement,\n      content: contentChild as ReactElement,\n    };\n  };\n\n  const popoverTargetClasses = cx('Dropdown-target', targetClassName);\n  const popoverClasses = cx('Dropdown', popoverClassName);\n\n  return (\n    <Popover\n      isOpen={isOpen}\n      placement={placement}\n      onInteraction={onInteraction || handlePopoverInteraction}\n      restrictHeight={false}\n      disabled={disabled}\n      targetClassName={popoverTargetClasses}\n      popoverClassName={popoverClasses}\n      data-test-id={testId}\n      {...rest}\n    >\n      {renderTrigger()}\n      {renderContent()}\n    </Popover>\n  );\n};\n\nexport { Dropdown };\nexport type { DropdownProps };\n","import type { ButtonProps } from '@launchpad-ui/button';\n\nimport { Button } from '@launchpad-ui/button';\nimport { ExpandMore } from '@launchpad-ui/icons';\nimport { forwardRef } from 'react';\n\ntype DropdownButtonProps = ButtonProps & {\n  hideCaret?: boolean;\n};\n\nconst DropdownButton = forwardRef<HTMLButtonElement, DropdownButtonProps>((props, ref) => {\n  const { children, hideCaret, 'data-test-id': testId = 'dropdown-button', ...rest } = props;\n\n  return (\n    <Button {...rest} data-test-id={testId} ref={ref}>\n      {children} {!hideCaret && <ExpandMore size=\"small\" />}\n    </Button>\n  );\n});\n\nDropdownButton.displayName = 'DropdownButton';\n\nexport { DropdownButton };\nexport type { DropdownButtonProps };\n"],"names":["Dropdown","props","placement","disabled","targetClassName","popoverClassName","isOpen","isOpenProp","onInteraction","onSelect","onStateChange","children","testId","rest","triggerRef","useRef","setIsOpen","useState","hasOpened","setHasOpened","useEffect","undefined","setTimeout","current","hasModal","closest","focus","renderTrigger","cloneElement","parseChildren","target","ref","isopen","toString","renderContent","content","handleSelect","item","handlePopoverInteraction","nextIsOpen","targetChild","contentChild","Children","toArray","popoverTargetClasses","cx","popoverClasses","DropdownButton","forwardRef","hideCaret","displayName"],"mappings":"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"}
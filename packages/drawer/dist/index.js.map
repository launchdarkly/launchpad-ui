{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/Drawer.tsx","../src/DrawerHeader.tsx"],"sourcesContent":["export const DRAWER_LABELLED_BY = 'drawer-title';\n","import type { Variants } from 'framer-motion';\nimport type { MouseEvent, ReactNode } from 'react';\n\nimport { IconButton } from '@launchpad-ui/button';\nimport { FocusTrap } from '@launchpad-ui/focus-trap';\nimport { Close } from '@launchpad-ui/icons';\nimport { Portal } from '@launchpad-ui/portal';\nimport { Progress } from '@launchpad-ui/progress';\nimport { usePreventScroll } from '@react-aria/overlays';\nimport { cx } from 'classix';\nimport { LazyMotion, m } from 'framer-motion';\nimport { Suspense, useEffect, useRef } from 'react';\n\nimport { DRAWER_LABELLED_BY } from './constants';\nimport styles from './styles/Drawer.module.css';\n\nconst overlay: Variants = {\n  visible: { opacity: 1, transition: { duration: 0.15 } },\n  hidden: { opacity: 0 },\n};\n\nconst slideRight: Variants = {\n  hidden: { opacity: 0, x: '25%' },\n  visible: {\n    opacity: 1,\n    x: '0%',\n    transition: { type: 'spring', delay: 0.15, duration: 0.2, bounce: 0 },\n  },\n};\n\nconst loadFeatures = () =>\n  import(\n    /* webpackChunkName: \"lp-drawer-framer-features\" */\n    /* webpackExports: \"domAnimation\" */\n    'framer-motion'\n  ).then((res) => res.domAnimation);\n\ntype DrawerProps = {\n  children?: ReactNode;\n  className?: string;\n  onCancel?(): void;\n  'data-test-id'?: string;\n  size?: 'small' | 'medium' | 'large' | 'xLarge' | 'full';\n};\n\nconst Drawer = ({\n  className,\n  children,\n  onCancel,\n  size = 'small',\n  'data-test-id': testId = 'drawer',\n}: DrawerProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  usePreventScroll();\n\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      event.stopImmediatePropagation();\n      const latest = [...document.querySelectorAll('[data-drawer]')].pop();\n      if (event.key === 'Escape' && latest === ref.current) {\n        close();\n      }\n    };\n\n    const close = () => {\n      onCancel?.();\n    };\n\n    document.body.classList.add('has-overlay');\n    document.addEventListener('keydown', handleEscape);\n\n    return () => {\n      document.body.classList.remove('has-overlay');\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [onCancel, testId]);\n\n  const handleOverlayClick = (event: MouseEvent<HTMLDivElement>) => {\n    if (event.target === event.currentTarget) {\n      onCancel && onCancel();\n    }\n  };\n\n  return (\n    <Portal>\n      <LazyMotion strict features={loadFeatures}>\n        <div\n          className={cx(styles.drawer, styles[size], className)}\n          data-drawer\n          data-test-id={testId}\n          ref={ref}\n        >\n          <m.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={overlay}\n            transition={{ duration: 0.15 }}\n            role=\"presentation\"\n            className={styles.overlay}\n            onMouseDown={handleOverlayClick}\n          >\n            <FocusTrap autoFocus restoreFocus>\n              <m.div\n                initial=\"hidden\"\n                animate=\"visible\"\n                variants={slideRight}\n                role=\"dialog\"\n                aria-labelledby={DRAWER_LABELLED_BY}\n                aria-modal\n                className={styles.content}\n                tabIndex={-1}\n              >\n                <IconButton\n                  aria-label=\"close\"\n                  icon={<Close size=\"medium\" />}\n                  className={styles.closeButton}\n                  onClick={onCancel}\n                  data-test-id=\"drawer-close-button\"\n                />\n                <Suspense fallback={<Progress />}>{children}</Suspense>\n              </m.div>\n            </FocusTrap>\n          </m.div>\n        </div>\n      </LazyMotion>\n    </Portal>\n  );\n};\n\nexport { Drawer };\nexport type { DrawerProps };\n","import type { HTMLAttributes } from 'react';\n\nimport { DRAWER_LABELLED_BY } from './constants';\n\ntype DrawerHeaderProps = HTMLAttributes<HTMLDivElement> & {\n  closeable?: boolean;\n  titleID?: string;\n  titleClassName?: string;\n  onClose?(): void;\n  'data-test-id'?: string;\n};\n\nconst DrawerHeader = ({\n  className,\n  children,\n  titleID,\n  titleClassName,\n  'data-test-id': testId = 'drawer-header',\n  ...rest\n}: DrawerHeaderProps) => {\n  return (\n    <div data-test-id={testId} className={className} {...rest}>\n      <h2 id={DRAWER_LABELLED_BY} className={titleClassName}>\n        {children}\n      </h2>\n    </div>\n  );\n};\n\nexport { DrawerHeader };\nexport type { DrawerHeaderProps };\n"],"names":["overlay","visible","opacity","transition","duration","hidden","slideRight","x","type","delay","bounce","loadFeatures","then","res","domAnimation","Drawer","className","children","onCancel","size","testId","ref","useRef","usePreventScroll","useEffect","handleEscape","event","stopImmediatePropagation","latest","document","querySelectorAll","pop","key","current","close","body","classList","add","addEventListener","remove","removeEventListener","handleOverlayClick","target","currentTarget","Portal","LazyMotion","cx","styles","drawer","_jsx","m","FocusTrap","_jsxs","DRAWER_LABELLED_BY","content","IconButton","Close","closeButton","Suspense","Progress","DrawerHeader","titleID","titleClassName","rest"],"mappings":"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"}
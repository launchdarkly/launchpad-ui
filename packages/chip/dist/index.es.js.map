{"version":3,"file":"index.es.js","sources":["../src/Chip.tsx"],"sourcesContent":["import type { HTMLAttributes } from 'react';\n\nimport { cx } from 'classix';\n\nimport styles from './styles/Chip.module.css';\n\ntype ChipProps = HTMLAttributes<HTMLSpanElement> & {\n  kind?:\n    | 'default'\n    | 'success'\n    | 'warning'\n    | 'inactive'\n    | 'info'\n    | 'label'\n    | 'new'\n    | 'beta'\n    | 'federal';\n  size?: 'normal' | 'large';\n  subtle?: boolean;\n  'data-test-id'?: string;\n};\n\nconst Chip = ({\n  kind = 'default',\n  size = 'normal',\n  subtle = false,\n  onClick,\n  onKeyDown,\n  className,\n  children,\n  'data-test-id': testId = 'chip',\n  ...rest\n}: ChipProps) => {\n  const isInteractive = !!(onClick || onKeyDown);\n\n  const classes = cx(\n    styles.Chip,\n    styles[`Chip--${kind}`],\n    styles[`Chip--${size}`],\n    className,\n    subtle && styles['Chip--subtle'],\n    isInteractive && styles['Chip--clickable']\n  );\n\n  return (\n    <span\n      className={classes}\n      data-test-id={testId}\n      {...(isInteractive\n        ? {\n            onClick,\n            onKeyDown,\n            tabIndex: 0,\n            role: 'button',\n          }\n        : {})}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport { Chip };\nexport type { ChipProps };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAsBA,MAAM,OAAO,CAAC;AAAA,EACZ,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB,SAAS;AAAA,KACtB;AACL,MAAiB;AACT,QAAA,gBAAgB,CAAC,EAAE,WAAW;AAEpC,QAAM,UAAU;AAAA,IACd,OAAO;AAAA,IACP,OAAO,SAAS;AAAA,IAChB,OAAO,SAAS;AAAA,IAChB;AAAA,IACA,UAAU,OAAO;AAAA,IACjB,iBAAiB,OAAO;AAAA,EAAA;AAIxB,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,MACX,gBAAc;AAAA,MACb,GAAI,gBACD;AAAA,QACE;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,MAAM;AAAA,MAAA,IAER,CAAC;AAAA,MACJ,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EAAA;AAGP;"}
{"version":3,"file":"index.js","sources":["../src/Tooltip.tsx"],"sourcesContent":["import type { PopoverProps } from '@launchpad-ui/popover';\nimport type { ReactNode } from 'react';\n\nimport { Popover } from '@launchpad-ui/popover';\nimport { cx } from 'classix';\nimport { forwardRef } from 'react';\n\nimport styles from './styles/Tooltip.module.css';\n\ntype TooltipProps = Omit<PopoverProps, 'children'> & {\n  className?: string;\n  children?: ReactNode;\n};\n\nconst TooltipBase = ({\n  className,\n  children,\n  targetClassName,\n  hoverCloseDelay = 0,\n  'data-test-id': testId = 'tooltip',\n  popoverContentClassName,\n  ...props\n}: TooltipProps) => {\n  return (\n    <Popover\n      enforceFocus={false}\n      interactionKind=\"hover-or-focus\"\n      hoverCloseDelay={hoverCloseDelay}\n      popoverClassName={cx(styles.Tooltip, className)}\n      popoverContentClassName={cx(popoverContentClassName, styles['Tooltip-popover-content'])}\n      targetClassName={targetClassName}\n      data-test-id={testId}\n      {...props}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nconst Tooltip = forwardRef<Element, TooltipProps>((props, ref) => (\n  <TooltipBase {...props} targetElementRef={ref} />\n));\n\nTooltip.displayName = 'Tooltip';\n\nexport { Tooltip, TooltipBase };\nexport type { TooltipProps };\n"],"names":["jsx","Popover","cx","forwardRef"],"mappings":";;;;;;;;;;;AAcA,MAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAAkB;AAAA,EAClB,gBAAgB,SAAS;AAAA,EACzB;AAAA,KACG;AACL,MAAoB;AAEhB,SAAAA,2BAAA;AAAA,IAACC,QAAA;AAAA,IAAA;AAAA,MACC,cAAc;AAAA,MACd,iBAAgB;AAAA,MAChB;AAAA,MACA,kBAAkBC,QAAA,GAAG,OAAO,SAAS,SAAS;AAAA,MAC9C,yBAAyBA,QAAAA,GAAG,yBAAyB,OAAO,0BAA0B;AAAA,MACtF;AAAA,MACA,gBAAc;AAAA,MACb,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EAAA;AAGP;AAEM,MAAA,UAAUC,MAAkC,WAAA,CAAC,OAAO,QACvDH,2BAAA,IAAA,aAAA,EAAa,GAAG,OAAO,kBAAkB,IAAK,CAAA,CAChD;AAED,QAAQ,cAAc;;;"}
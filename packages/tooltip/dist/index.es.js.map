{"version":3,"file":"index.es.js","sources":["../src/Tooltip.tsx"],"sourcesContent":["import type { PopoverProps } from '@launchpad-ui/popover';\nimport type { ReactNode } from 'react';\n\nimport { Popover } from '@launchpad-ui/popover';\nimport { cx } from 'classix';\nimport { forwardRef } from 'react';\n\nimport styles from './styles/Tooltip.module.css';\n\ntype TooltipProps = Omit<PopoverProps, 'children'> & {\n  className?: string;\n  children?: ReactNode;\n};\n\nconst TooltipBase = ({\n  className,\n  children,\n  targetClassName,\n  hoverCloseDelay = 0,\n  'data-test-id': testId = 'tooltip',\n  popoverContentClassName,\n  ...props\n}: TooltipProps) => {\n  return (\n    <Popover\n      enforceFocus={false}\n      interactionKind=\"hover-or-focus\"\n      hoverCloseDelay={hoverCloseDelay}\n      popoverClassName={cx(styles.Tooltip, className)}\n      popoverContentClassName={cx(popoverContentClassName, styles['Tooltip-popover-content'])}\n      targetClassName={targetClassName}\n      data-test-id={testId}\n      {...props}\n    >\n      {children}\n    </Popover>\n  );\n};\n\nconst Tooltip = forwardRef<Element, TooltipProps>((props, ref) => (\n  <TooltipBase {...props} targetElementRef={ref} />\n));\n\nTooltip.displayName = 'Tooltip';\n\nexport { Tooltip, TooltipBase };\nexport type { TooltipProps };\n"],"names":["TooltipBase","className","children","targetClassName","hoverCloseDelay","testId","popoverContentClassName","props","cx","styles","Tooltip","forwardRef","ref","displayName"],"mappings":";;;;;;;;;AAcA,MAAMA,cAAc,CAAC;AAAA,EACnBC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC,kBAAkB;AAAA,EAClB,gBAAgBC,SAAS;AAAA,EACzBC;AAAAA,KACGC;AACS,MAAM;AAClB,6BACG,SAAO;AAAA,IACN,cAAc;AAAA,IACd,iBAAgB;AAAA,IAChB;AAAA,IACA,kBAAkBC,GAAGC,OAAOC,SAAST,SAAS;AAAA,IAC9C,yBAAyBO,GAAGF,yBAAyBG,OAAO,0BAA0B;AAAA,IACtF;AAAA,IACA,gBAAcJ;AAAAA,IAAO,GACjBE;AAAAA,IAAK;AAAA,EAAA,CAGD;AAEd;AAEA,MAAMG,UAAUC,WAAkC,CAACJ,OAAOK,4BACvD,aAAW;AAAA,EAAA,GAAKL;AAAAA,EAAO,kBAAkBK;AAAI,CAAA,CAC/C;AAEDF,QAAQG,cAAc;"}
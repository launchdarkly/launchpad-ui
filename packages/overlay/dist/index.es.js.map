{"version":3,"file":"index.es.js","sources":["../src/Overlay.tsx"],"sourcesContent":["import type { KeyboardEvent, MouseEvent as ReactMouseEvent, ReactNode } from 'react';\n\nimport { Portal } from '@launchpad-ui/portal';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\ntype OverlayProps = {\n  isOpen: boolean;\n  isModal?: boolean;\n  canEscapeKeyClose?: boolean;\n  canOutsideClickClose?: boolean;\n  enforceFocus?: boolean;\n  lazy?: boolean;\n  onClose: (event: ReactMouseEvent | KeyboardEvent) => void;\n  children?: ReactNode;\n};\n\nconst Overlay = ({\n  isOpen,\n  lazy = true,\n  enforceFocus = true,\n  isModal = false,\n  canOutsideClickClose = true,\n  canEscapeKeyClose = true,\n  onClose,\n  children,\n}: OverlayProps) => {\n  const [hasEverOpened, setHasEverOpened] = useState(isOpen);\n  const containerElement = useRef<HTMLDivElement>(null);\n\n  const handleDocumentClick = useCallback(\n    (event: MouseEvent) => {\n      const eventTarget = event.target as Element;\n      const wasClickInOverlay =\n        containerElement.current && containerElement.current.contains(eventTarget);\n      // wasClickInBody accounts for clicks in portals within the popover, which are outside of the body and therefore not in the overlay\n      const wasClickInBody = !!eventTarget.closest('body');\n\n      if (isOpen && canOutsideClickClose && !wasClickInOverlay && wasClickInBody) {\n        typeof onClose === 'function' && onClose(event as unknown as ReactMouseEvent);\n      }\n    },\n    [canOutsideClickClose, isOpen, onClose]\n  );\n\n  const focusContainer = useCallback(() => {\n    requestAnimationFrame(() => {\n      if (!isOpen || containerElement.current === null || document.activeElement === null) {\n        return;\n      }\n\n      if (!containerElement.current.contains(document.activeElement)) {\n        const autofocusElement = containerElement.current.querySelector(\n          '[autofocus]'\n        ) as HTMLDivElement;\n        const tabbableElement = containerElement.current.querySelector(\n          '[tabindex]'\n        ) as HTMLDivElement;\n        if (autofocusElement) {\n          autofocusElement.focus();\n        } else if (tabbableElement) {\n          tabbableElement.focus();\n        }\n      }\n    });\n  }, [isOpen]);\n\n  const handleDocumentFocus = useCallback(\n    (event: Event) => {\n      const eventTarget = event.target as Element;\n\n      if (\n        enforceFocus &&\n        containerElement.current &&\n        !containerElement.current.contains(eventTarget)\n      ) {\n        event.stopImmediatePropagation();\n        focusContainer();\n      }\n    },\n    [enforceFocus, focusContainer]\n  );\n\n  const handleOverlayOpen = useCallback(() => {\n    if (canOutsideClickClose) {\n      document.addEventListener('mousedown', handleDocumentClick);\n    }\n\n    if (enforceFocus) {\n      document.addEventListener('focus', handleDocumentFocus, true);\n    }\n\n    if (isModal) {\n      document.body.classList.add('has-overlay');\n    }\n  }, [handleDocumentClick, handleDocumentFocus, canOutsideClickClose, enforceFocus, isModal]);\n\n  const handleOverlayClose = useCallback(() => {\n    document.removeEventListener('mousedown', handleDocumentClick);\n    document.removeEventListener('focus', handleDocumentFocus, true);\n\n    if (isModal) {\n      document.body.classList.remove('has-overlay');\n    }\n  }, [handleDocumentClick, handleDocumentFocus, isModal]);\n\n  useEffect(() => {\n    if (isOpen) {\n      handleOverlayOpen();\n    } else {\n      handleOverlayClose();\n    }\n\n    setHasEverOpened(hasEverOpened || isOpen);\n\n    return () => {\n      handleOverlayClose();\n    };\n  }, [isOpen, handleOverlayOpen, handleOverlayClose, hasEverOpened]);\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (canEscapeKeyClose && event.key === 'Escape') {\n      typeof onClose === 'function' && onClose(event);\n      event.preventDefault();\n    }\n  };\n\n  if (lazy && !hasEverOpened) {\n    return null;\n  }\n\n  return (\n    <Portal onKeyDown={handleKeyDown} ref={containerElement}>\n      {isOpen ? children : null}\n    </Portal>\n  );\n};\n\nexport { Overlay };\nexport type { OverlayProps };\n"],"names":["Overlay","isOpen","lazy","enforceFocus","isModal","canOutsideClickClose","canEscapeKeyClose","onClose","children","hasEverOpened","setHasEverOpened","useState","containerElement","useRef","handleDocumentClick","useCallback","event","eventTarget","target","wasClickInOverlay","current","contains","wasClickInBody","closest","focusContainer","requestAnimationFrame","document","activeElement","autofocusElement","querySelector","tabbableElement","focus","handleDocumentFocus","stopImmediatePropagation","handleOverlayOpen","addEventListener","body","classList","add","handleOverlayClose","removeEventListener","remove","useEffect","handleKeyDown","key","preventDefault"],"mappings":"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"}
{"version":3,"file":"index.js","sources":["../src/DelayedIndicator.tsx","../src/Progress.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\n\nimport { useEffect, useState } from 'react';\n\ntype DelayedIndicatorProps = {\n  children: ReactElement;\n  delayMs?: 0 | 50 | 250 | 1000;\n};\n\nconst DelayedIndicator = ({ children, delayMs = 250 }: DelayedIndicatorProps) => {\n  const [renderChildren, setRenderChildren] = useState(false);\n\n  useEffect(() => {\n    let delay: ReturnType<typeof setTimeout> | undefined = undefined;\n\n    if (typeof delayMs === 'number') {\n      if (delayMs === 0) {\n        setRenderChildren(true);\n      } else {\n        delay = setTimeout(() => {\n          setRenderChildren(true);\n        }, delayMs);\n      }\n    }\n\n    return () => {\n      if (delay) {\n        clearTimeout(delay);\n      }\n    };\n  }, [delayMs]);\n\n  return renderChildren ? children : null;\n};\n\nexport { DelayedIndicator };\nexport type { DelayedIndicatorProps };\n","import type { DelayedIndicatorProps } from './DelayedIndicator';\n\nimport { cx } from 'classix';\n\nimport { DelayedIndicator } from './DelayedIndicator';\nimport styles from './styles/Progress.module.css';\n\ntype ProgressProps = {\n  value?: number;\n  size?: 'small' | 'large' | 'xLarge';\n  className?: string;\n  delayMs?: DelayedIndicatorProps['delayMs'];\n  'data-test-id'?: string;\n};\n\nconst clamp = (number: number, lower: number, upper?: number) =>\n  upper ? Math.min(Math.max(number, lower), upper) : Math.min(number, lower);\n\nconst Progress = ({\n  value,\n  size = 'small',\n  'data-test-id': testId = 'progress',\n  className,\n  delayMs = 0,\n}: ProgressProps) => {\n  const dimensions = {\n    small: {\n      diameter: 16,\n    },\n    large: {\n      diameter: 24,\n    },\n    xLarge: {\n      diameter: 32,\n    },\n  };\n\n  const isIndeterminate = value === undefined || value === null;\n  const diameter = (dimensions[size] && dimensions[size].diameter) || dimensions.small.diameter;\n  const strokeWidth = diameter * (isIndeterminate ? 0.1 : 0.5);\n  const radius = diameter * 0.5 - strokeWidth * 0.5;\n  const circumference = 2 * Math.PI * radius;\n\n  const indicator = (\n    <svg\n      className={cx(\n        styles.Progress,\n        isIndeterminate && styles['Progress--indeterminate'],\n        className\n      )}\n      width={diameter}\n      height={diameter}\n      viewBox={`0 0 ${diameter} ${diameter}`}\n      data-test-id={testId}\n      role=\"progressbar\"\n      aria-valuemin={0}\n      aria-valuetext=\"loading\"\n      aria-valuemax={100}\n    >\n      <circle\n        className={styles['Progress-track']}\n        cx={diameter / 2}\n        cy={diameter / 2}\n        r={radius}\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        className={styles['Progress-head']}\n        cx={diameter / 2}\n        cy={diameter / 2}\n        r={radius}\n        strokeWidth={strokeWidth}\n        strokeDasharray={circumference}\n        strokeDashoffset={\n          circumference * (1 - (value === undefined || value === null ? 0.25 : clamp(value, 0, 1)))\n        }\n      />\n    </svg>\n  );\n\n  return delayMs ? <DelayedIndicator delayMs={delayMs}>{indicator}</DelayedIndicator> : indicator;\n};\n\nexport { Progress };\nexport type { ProgressProps };\n"],"names":["useState","useEffect","jsxs","cx","jsx"],"mappings":";;;;;AASA,MAAM,mBAAmB,CAAC,EAAE,UAAU,UAAU,UAAiC;AAC/E,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,eAAS,KAAK;AAE1DC,QAAAA,UAAU,MAAM;AACd,QAAI,QAAmD;AAEnD,QAAA,OAAO,YAAY,UAAU;AAC/B,UAAI,YAAY,GAAG;AACjB,0BAAkB,IAAI;AAAA,MAAA,OACjB;AACL,gBAAQ,WAAW,MAAM;AACvB,4BAAkB,IAAI;AAAA,WACrB,OAAO;AAAA,MACZ;AAAA,IACF;AAEA,WAAO,MAAM;AACX,UAAI,OAAO;AACT,qBAAa,KAAK;AAAA,MACpB;AAAA,IAAA;AAAA,EACF,GACC,CAAC,OAAO,CAAC;AAEZ,SAAO,iBAAiB,WAAW;AACrC;;;;;;;;;;AClBA,MAAM,QAAQ,CAAC,QAAgB,OAAe,UAC5C,QAAQ,KAAK,IAAI,KAAK,IAAI,QAAQ,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,QAAQ,KAAK;AAE3E,MAAM,WAAW,CAAC;AAAA,EAChB;AAAA,EACA,OAAO;AAAA,EACP,gBAAgB,SAAS;AAAA,EACzB;AAAA,EACA,UAAU;AACZ,MAAqB;AACnB,QAAM,aAAa;AAAA,IACjB,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EAAA;AAGI,QAAA,kBAAkB,UAAU,UAAa,UAAU;AACzD,QAAM,WAAY,WAAW,SAAS,WAAW,MAAM,YAAa,WAAW,MAAM;AAC/E,QAAA,cAAc,YAAY,kBAAkB,MAAM;AAClD,QAAA,SAAS,WAAW,MAAM,cAAc;AACxC,QAAA,gBAAgB,IAAI,KAAK,KAAK;AAEpC,QAAM,YACJC,2BAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWC,QAAA;AAAA,QACT,OAAO;AAAA,QACP,mBAAmB,OAAO;AAAA,QAC1B;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS,OAAO,YAAY;AAAA,MAC5B,gBAAc;AAAA,MACd,MAAK;AAAA,MACL,iBAAe;AAAA,MACf,kBAAe;AAAA,MACf,iBAAe;AAAA,MAEf,UAAA;AAAA,QAAAC,2BAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAW,OAAO;AAAA,YAClB,IAAI,WAAW;AAAA,YACf,IAAI,WAAW;AAAA,YACf,GAAG;AAAA,YACH;AAAA,UAAA;AAAA,QACF;AAAA,QACAA,2BAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAW,OAAO;AAAA,YAClB,IAAI,WAAW;AAAA,YACf,IAAI,WAAW;AAAA,YACf,GAAG;AAAA,YACH;AAAA,YACA,iBAAiB;AAAA,YACjB,kBACE,iBAAiB,KAAK,UAAU,UAAa,UAAU,OAAO,OAAO,MAAM,OAAO,GAAG,CAAC;AAAA,UAAA;AAAA,QAE1F;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIJ,SAAO,UAAUA,2BAAA,IAAC,kBAAiB,EAAA,SAAmB,qBAAU,IAAsB;AACxF;;;"}
{"version":3,"file":"index.js","sources":["../src/DelayedIndicator.tsx","../src/Progress.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\n\nimport { useEffect, useState } from 'react';\n\ntype DelayedIndicatorProps = {\n  children: ReactElement;\n  delayMs?: 0 | 50 | 250 | 1000;\n};\n\nconst DelayedIndicator = ({ children, delayMs = 250 }: DelayedIndicatorProps) => {\n  const [renderChildren, setRenderChildren] = useState(false);\n\n  useEffect(() => {\n    let delay: ReturnType<typeof setTimeout> | undefined = undefined;\n\n    if (typeof delayMs === 'number') {\n      if (delayMs === 0) {\n        setRenderChildren(true);\n      } else {\n        delay = setTimeout(() => {\n          setRenderChildren(true);\n        }, delayMs);\n      }\n    }\n\n    return () => {\n      if (delay) {\n        clearTimeout(delay);\n      }\n    };\n  }, [delayMs]);\n\n  return renderChildren ? children : null;\n};\n\nexport { DelayedIndicator };\nexport type { DelayedIndicatorProps };\n","import type { DelayedIndicatorProps } from './DelayedIndicator';\n\nimport { cx } from 'classix';\n\nimport { DelayedIndicator } from './DelayedIndicator';\nimport styles from './styles/Progress.module.css';\n\ntype ProgressProps = {\n  value?: number;\n  size?: 'small' | 'large' | 'xLarge';\n  className?: string;\n  delayMs?: DelayedIndicatorProps['delayMs'];\n  'data-test-id'?: string;\n};\n\nconst clamp = (number: number, lower: number, upper?: number) =>\n  upper ? Math.min(Math.max(number, lower), upper) : Math.min(number, lower);\n\nconst Progress = ({\n  value,\n  size = 'small',\n  'data-test-id': testId = 'progress',\n  className,\n  delayMs = 0,\n}: ProgressProps) => {\n  const dimensions = {\n    small: {\n      diameter: 16,\n    },\n    large: {\n      diameter: 24,\n    },\n    xLarge: {\n      diameter: 32,\n    },\n  };\n\n  const isIndeterminate = value === undefined || value === null;\n  const diameter = (dimensions[size] && dimensions[size].diameter) || dimensions.small.diameter;\n  const strokeWidth = diameter * (isIndeterminate ? 0.1 : 0.5);\n  const radius = diameter * 0.5 - strokeWidth * 0.5;\n  const circumference = 2 * Math.PI * radius;\n\n  const indicator = (\n    <svg\n      className={cx(\n        styles.Progress,\n        isIndeterminate && styles['Progress--indeterminate'],\n        className\n      )}\n      width={diameter}\n      height={diameter}\n      viewBox={`0 0 ${diameter} ${diameter}`}\n      data-test-id={testId}\n      role=\"progressbar\"\n      aria-valuemin={0}\n      aria-valuetext=\"loading\"\n      aria-valuemax={100}\n    >\n      <circle\n        className={styles['Progress-track']}\n        cx={diameter / 2}\n        cy={diameter / 2}\n        r={radius}\n        strokeWidth={strokeWidth}\n      />\n      <circle\n        className={styles['Progress-head']}\n        cx={diameter / 2}\n        cy={diameter / 2}\n        r={radius}\n        strokeWidth={strokeWidth}\n        strokeDasharray={circumference}\n        strokeDashoffset={\n          circumference * (1 - (value === undefined || value === null ? 0.25 : clamp(value, 0, 1)))\n        }\n      />\n    </svg>\n  );\n\n  return delayMs ? <DelayedIndicator delayMs={delayMs}>{indicator}</DelayedIndicator> : indicator;\n};\n\nexport { Progress };\nexport type { ProgressProps };\n"],"names":["DelayedIndicator","children","delayMs","renderChildren","setRenderChildren","useState","useEffect","delay","undefined","setTimeout","clearTimeout","clamp","number","lower","upper","Math","min","max","Progress","value","size","testId","className","dimensions","small","diameter","large","xLarge","isIndeterminate","strokeWidth","radius","circumference","PI","indicator","cx","styles","_jsx"],"mappings":";;;;;AASA,MAAMA,mBAAmB,CAAC;AAAA,EAAEC;AAAAA,EAAUC,UAAU;AAA2B,MAAM;AAC/E,QAAM,CAACC,gBAAgBC,iBAAiB,IAAIC,eAAS,KAAK;AAE1DC,QAAAA,UAAU,MAAM;AACd,QAAIC,QAAmDC;AAEnD,QAAA,OAAON,YAAY,UAAU;AAC/B,UAAIA,YAAY,GAAG;AACjBE,0BAAkB,IAAI;AAAA,MAAA,OACjB;AACLG,gBAAQE,WAAW,MAAM;AACvBL,4BAAkB,IAAI;AAAA,WACrBF,OAAO;AAAA,MACZ;AAAA,IACF;AAEA,WAAO,MAAM;AACX,UAAIK,OAAO;AACTG,qBAAaH,KAAK;AAAA,MACpB;AAAA,IAAA;AAAA,EACF,GACC,CAACL,OAAO,CAAC;AAEZ,SAAOC,iBAAiBF,WAAW;AACrC;;;;;;;;;;AClBA,MAAMU,QAAQ,CAACC,QAAgBC,OAAeC,UAC5CA,QAAQC,KAAKC,IAAID,KAAKE,IAAIL,QAAQC,KAAK,GAAGC,KAAK,IAAIC,KAAKC,IAAIJ,QAAQC,KAAK;AAE3E,MAAMK,WAAW,CAAC;AAAA,EAChBC;AAAAA,EACAC,OAAO;AAAA,EACP,gBAAgBC,SAAS;AAAA,EACzBC;AAAAA,EACApB,UAAU;AACG,MAAM;AACnB,QAAMqB,aAAa;AAAA,IACjBC,OAAO;AAAA,MACLC,UAAU;AAAA,IACZ;AAAA,IACAC,OAAO;AAAA,MACLD,UAAU;AAAA,IACZ;AAAA,IACAE,QAAQ;AAAA,MACNF,UAAU;AAAA,IACZ;AAAA,EAAA;AAGIG,QAAAA,kBAAkBT,UAAUX,UAAaW,UAAU;AACzD,QAAMM,WAAYF,WAAWH,SAASG,WAAWH,MAAMK,YAAaF,WAAWC,MAAMC;AAC/EI,QAAAA,cAAcJ,YAAYG,kBAAkB,MAAM;AAClDE,QAAAA,SAASL,WAAW,MAAMI,cAAc;AACxCE,QAAAA,gBAAgB,IAAIhB,KAAKiB,KAAKF;AAE9BG,QAAAA,4CACJ,OAAA;AAAA,IACE,WAAWC,QAAAA,GACTC,OAAOjB,UACPU,mBAAmBO,OAAO,4BAC1Bb,SAAS;AAAA,IAEX,OAAOG;AAAAA,IACP,QAAQA;AAAAA,IACR,SAAU,OAAMA,YAAYA;AAAAA,IAC5B,gBAAcJ;AAAAA,IACd,MAAK;AAAA,IACL,iBAAe;AAAA,IACf,kBAAe;AAAA,IACf,iBAAe;AAAA,IAAI,UAEnB,CAAAe,2BAAA,IAAA,UAAA;AAAA,MACE,WAAWD,OAAO;AAAA,MAClB,IAAIV,WAAW;AAAA,MACf,IAAIA,WAAW;AAAA,MACf,GAAGK;AAAAA,MACH;AAAA,IAAA,CAAyB,GAE3BM,2BAAA,IAAA,UAAA;AAAA,MACE,WAAWD,OAAO;AAAA,MAClB,IAAIV,WAAW;AAAA,MACf,IAAIA,WAAW;AAAA,MACf,GAAGK;AAAAA,MACH;AAAA,MACA,iBAAiBC;AAAAA,MACjB,kBACEA,iBAAiB,KAAKZ,UAAUX,UAAaW,UAAU,OAAO,OAAOR,MAAMQ,OAAO,GAAG,CAAC;AAAA,IAAA,CAExF,CAAA;AAAA,EAAA,CAEL;AAEMjB,SAAAA,yCAAW,kBAAgB;AAAA,IAAC;AAAA,IAAiB,UAAE+B;AAAAA,EAAS,CAAA,IAAuBA;AACxF;;;"}
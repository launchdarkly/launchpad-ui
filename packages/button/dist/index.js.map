{"version":3,"file":"index.js","sources":["../src/Button.tsx","../src/ButtonGroup.tsx","../src/UploadButton.tsx","../src/IconButton.tsx"],"sourcesContent":["import type { IconProps } from '@launchpad-ui/icons';\nimport type {\n  ButtonHTMLAttributes,\n  ElementType,\n  KeyboardEventHandler,\n  MouseEvent,\n  ReactElement,\n  ReactNode,\n} from 'react';\n\nimport { Slot } from '@radix-ui/react-slot';\nimport { cx } from 'classix';\nimport { isValidElement, cloneElement, forwardRef, memo } from 'react';\n\nimport './styles/Button.css';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  isLoading?: boolean;\n  loadingText?: string | JSX.Element;\n  size?: 'tiny' | 'small' | 'normal' | 'big';\n  kind?: 'default' | 'primary' | 'destructive' | 'minimal' | 'link' | 'close';\n  fit?: boolean;\n  disabled?: boolean;\n  icon?: ReactElement<IconProps>;\n  renderIconFirst?: boolean;\n  asChild?: boolean;\n  'data-test-id'?: string;\n};\n\nconst ButtonComponent = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  const {\n    icon,\n    children,\n    className,\n    size,\n    fit,\n    kind = 'default',\n    isLoading = false,\n    loadingText,\n    renderIconFirst = false,\n    disabled = false,\n    asChild = false,\n    onKeyDown,\n    onClick,\n    type = 'button',\n    'data-test-id': testId = 'button',\n    ...rest\n  } = props;\n\n  const Component: ElementType = asChild ? Slot : 'button';\n\n  const classes = cx(\n    'Button',\n    `Button--${kind}`,\n    disabled && 'Button--disabled',\n    size && `Button--${size}`,\n    fit && 'Button--fit',\n    className\n  );\n\n  const renderIcon =\n    icon &&\n    cloneElement(icon, {\n      key: 'icon',\n      size: icon.props.size || 'small',\n      'aria-hidden': true,\n      className: cx(icon.props.className, 'Button-icon'),\n    });\n\n  const getFinalChildren = (c: ReactNode) => [\n    renderIconFirst && renderIcon,\n    isLoading && <span key=\"text\">{loadingText || c}</span>,\n    !isLoading && c && <span key=\"text\">{c}</span>,\n    !renderIconFirst && renderIcon,\n    isLoading && <span key=\"spinner\">â€¦</span>,\n  ];\n\n  const renderChildren = () => {\n    if (asChild && isValidElement(children)) {\n      return cloneElement(children, undefined, getFinalChildren(children.props.children));\n    }\n\n    return getFinalChildren(children);\n  };\n\n  const isDisabled = disabled || isLoading;\n\n  const handleClick = (event: MouseEvent<HTMLAnchorElement> & MouseEvent<HTMLButtonElement>) => {\n    if (disabled) return event.preventDefault();\n\n    onClick && onClick(event);\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\n    if (event.target instanceof HTMLAnchorElement) {\n      const spacebarKeys = ['Spacebar', ' '];\n\n      if (spacebarKeys.includes(event.key)) {\n        event.preventDefault();\n        const link = event.target as HTMLAnchorElement;\n        link.click();\n      }\n    }\n  };\n\n  return (\n    <Component\n      className={classes}\n      ref={ref}\n      onClick={handleClick}\n      onKeyDown={onKeyDown || handleKeyDown}\n      disabled={isDisabled}\n      type={type}\n      data-test-id={testId}\n      {...rest}\n    >\n      {renderChildren()}\n    </Component>\n  );\n});\n\nButtonComponent.displayName = 'Button';\n\nconst Button = memo(ButtonComponent);\n\nexport { Button };\nexport type { ButtonProps };\n","import type { HTMLAttributes } from 'react';\n\nimport { cx } from 'classix';\n\nimport './styles/ButtonGroup.css';\n\ntype ButtonGroupProps = HTMLAttributes<HTMLDivElement> & {\n  spacing?: 'compact' | 'normal' | 'large';\n  'data-test-id'?: string;\n};\n\nconst ButtonGroup = ({\n  spacing = 'normal',\n  className,\n  children,\n  'data-test-id': testId = 'button-group',\n  ...rest\n}: ButtonGroupProps) => {\n  const classes = cx('ButtonGroup', `ButtonGroup--${spacing}`, className);\n\n  return (\n    <div className={classes} data-test-id={testId} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport { ButtonGroup };\nexport type { ButtonGroupProps };\n","import type { ButtonProps } from './Button';\nimport type { ChangeEventHandler, KeyboardEvent } from 'react';\n\nimport { cx } from 'classix';\nimport { useRef } from 'react';\n\nimport { Button } from './Button';\n\ntype UploadButtonProps = Omit<ButtonProps, 'onSelect'> & {\n  onSelect(file?: File | null): void;\n  maxSize: number;\n  accept?: string;\n  id: string;\n};\n\nconst UploadButton = ({\n  id,\n  className,\n  children,\n  disabled,\n  accept,\n  maxSize,\n  onSelect,\n  'data-test-id': testId = 'upload-button',\n  ...rest\n}: UploadButtonProps) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const classes = cx('UploadButton', className);\n\n  const handleClick = () => {\n    inputRef.current?.click();\n  };\n\n  const handleKeyDown = (event: KeyboardEvent<Element>) => {\n    const actionKeys = ['Spacebar', ' ', 'Enter'];\n\n    if (actionKeys.includes(event.key)) {\n      event.preventDefault();\n      inputRef.current?.click();\n    }\n  };\n\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    let file;\n\n    if (event) {\n      const e = event;\n      file = e.target.files?.[0];\n    }\n\n    if (file && file.size > maxSize) {\n      return;\n    }\n\n    event?.persist();\n    onSelect(file);\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  };\n\n  return (\n    <span className={classes} data-test-id={testId}>\n      <input\n        ref={inputRef}\n        className=\"UploadButton-input\"\n        id={id}\n        style={{ display: 'none' }}\n        type=\"file\"\n        onChange={handleChange}\n        disabled={disabled}\n        accept={accept}\n        data-test-id=\"upload-button-input\"\n      />\n      <label htmlFor={id} className=\"UploadButton-label\">\n        <Button\n          {...rest}\n          disabled={disabled}\n          tabIndex={disabled ? -1 : 0}\n          role=\"button\"\n          onKeyDown={handleKeyDown}\n          onClick={handleClick}\n        >\n          {children}\n        </Button>\n      </label>\n    </span>\n  );\n};\n\nexport { UploadButton };\nexport type { UploadButtonProps };\n","import type { IconProps } from '@launchpad-ui/icons';\nimport type {\n  ButtonHTMLAttributes,\n  ElementType,\n  KeyboardEventHandler,\n  MouseEvent,\n  ReactElement,\n} from 'react';\n\nimport { Slot } from '@radix-ui/react-slot';\nimport { cx } from 'classix';\nimport { isValidElement, cloneElement, forwardRef, memo } from 'react';\n\nimport './styles/Button.css';\n\ntype IconButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  kind?: 'default' | 'primary' | 'destructive' | 'minimal' | 'close';\n  icon: ReactElement<IconProps>;\n  size?: 'small' | 'normal';\n  'aria-label': string;\n  asChild?: boolean;\n  'data-test-id'?: string;\n};\n\nconst IconButtonComponent = forwardRef<HTMLButtonElement, IconButtonProps>((props, ref) => {\n  const {\n    icon,\n    children,\n    className,\n    size = 'normal',\n    kind = 'minimal',\n    disabled = false,\n    asChild = false,\n    onKeyDown,\n    onClick,\n    type = 'button',\n    'data-test-id': testId = 'icon-button',\n    ...rest\n  } = props;\n\n  const Component: ElementType = asChild ? Slot : 'button';\n\n  const classes = cx(\n    'IconButton',\n    'Button',\n    'Button--icon',\n    `Button--${kind}`,\n    disabled && 'Button--disabled',\n    size && `Button--${size}`,\n    className\n  );\n\n  const clonedIcon = cloneElement(icon, {\n    key: 'icon',\n    size: icon.props.size || 'medium',\n    'aria-hidden': true,\n    className: cx(icon.props.className, 'Button-icon'),\n  });\n\n  const renderChildren = () => {\n    if (asChild && isValidElement(children)) {\n      return cloneElement(children, undefined, clonedIcon);\n    }\n\n    return clonedIcon;\n  };\n\n  const handleClick = (event: MouseEvent<HTMLAnchorElement> & MouseEvent<HTMLButtonElement>) => {\n    if (disabled) return event.preventDefault();\n\n    onClick && onClick(event);\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\n    if (event.target instanceof HTMLAnchorElement) {\n      const spacebarKeys = ['Spacebar', ' '];\n\n      if (spacebarKeys.includes(event.key)) {\n        event.preventDefault();\n        const link = event.target as HTMLAnchorElement;\n        link.click();\n      }\n    }\n  };\n\n  return (\n    <Component\n      className={classes}\n      ref={ref}\n      onClick={handleClick}\n      disabled={disabled}\n      onKeyDown={onKeyDown || handleKeyDown}\n      type={type}\n      data-test-id={testId}\n      {...rest}\n    >\n      {renderChildren()}\n    </Component>\n  );\n});\n\nIconButtonComponent.displayName = 'IconButton';\n\nconst IconButton = memo(IconButtonComponent);\n\nexport { IconButton };\nexport type { IconButtonProps };\n"],"names":["forwardRef","Slot","cx","cloneElement","jsx","isValidElement","memo","useRef","jsxs"],"mappings":";;;;;;;AA6BA,MAAM,kBAAkBA,MAAA,WAA2C,CAAC,OAAO,QAAQ;AAC3E,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,YAAY;AAAA,IACZ;AAAA,IACA,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,gBAAgB,SAAS;AAAA,OACtB;AAAA,EACD,IAAA;AAEE,QAAA,YAAyB,UAAUC,UAAO,OAAA;AAEhD,QAAM,UAAUC,QAAA;AAAA,IACd;AAAA,IACA,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ,WAAW;AAAA,IACnB,OAAO;AAAA,IACP;AAAA,EAAA;AAGI,QAAA,aACJ,QACAC,MAAA,aAAa,MAAM;AAAA,IACjB,KAAK;AAAA,IACL,MAAM,KAAK,MAAM,QAAQ;AAAA,IACzB,eAAe;AAAA,IACf,WAAWD,QAAAA,GAAG,KAAK,MAAM,WAAW,aAAa;AAAA,EAAA,CAClD;AAEG,QAAA,mBAAmB,CAAC,MAAiB;AAAA,IACzC,mBAAmB;AAAA,IACnB,aAAaE,2BAAA,IAAC,QAAiB,EAAA,UAAA,eAAe,KAAvB,MAAyB;AAAA,IAChD,CAAC,aAAa,KAAMA,+BAAA,QAAA,EAAiB,eAAR,MAAU;AAAA,IACvC,CAAC,mBAAmB;AAAA,IACpB,aAAaA,2BAAA,IAAC,QAAmB,EAAA,UAAA,IAAA,GAAV,SAAW;AAAA,EAAA;AAGpC,QAAM,iBAAiB,MAAM;AACvB,QAAA,WAAWC,qBAAe,QAAQ,GAAG;AACvC,aAAOF,mBAAa,UAAU,QAAW,iBAAiB,SAAS,MAAM,QAAQ,CAAC;AAAA,IACpF;AAEA,WAAO,iBAAiB,QAAQ;AAAA,EAAA;AAGlC,QAAM,aAAa,YAAY;AAEzB,QAAA,cAAc,CAAC,UAAyE;AACxF,QAAA;AAAU,aAAO,MAAM;AAE3B,eAAW,QAAQ,KAAK;AAAA,EAAA;AAGpB,QAAA,gBAAyD,CAAC,UAAU;AACpE,QAAA,MAAM,kBAAkB,mBAAmB;AACvC,YAAA,eAAe,CAAC,YAAY,GAAG;AAErC,UAAI,aAAa,SAAS,MAAM,GAAG,GAAG;AACpC,cAAM,eAAe;AACrB,cAAM,OAAO,MAAM;AACnB,aAAK,MAAM;AAAA,MACb;AAAA,IACF;AAAA,EAAA;AAIA,SAAAC,2BAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT,WAAW,aAAa;AAAA,MACxB,UAAU;AAAA,MACV;AAAA,MACA,gBAAc;AAAA,MACb,GAAG;AAAA,MAEH,UAAe,eAAA;AAAA,IAAA;AAAA,EAAA;AAGtB,CAAC;AAED,gBAAgB,cAAc;AAExB,MAAA,SAASE,WAAK,eAAe;;AChHnC,MAAM,cAAc,CAAC;AAAA,EACnB,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA,gBAAgB,SAAS;AAAA,KACtB;AACL,MAAwB;AACtB,QAAM,UAAUJ,QAAA,GAAG,eAAe,gBAAgB,WAAW,SAAS;AAGpE,SAAAE,+BAAC,SAAI,WAAW,SAAS,gBAAc,QAAS,GAAG,MAChD,SACH,CAAA;AAEJ;ACVA,MAAM,eAAe,CAAC;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB,SAAS;AAAA,KACtB;AACL,MAAyB;AACjB,QAAA,WAAWG,aAAyB,IAAI;AACxC,QAAA,UAAUL,QAAAA,GAAG,gBAAgB,SAAS;AAE5C,QAAM,cAAc,MAAM;;AACxB,mBAAS,YAAT,mBAAkB;AAAA,EAAM;AAGpB,QAAA,gBAAgB,CAAC,UAAkC;;AACvD,UAAM,aAAa,CAAC,YAAY,KAAK,OAAO;AAE5C,QAAI,WAAW,SAAS,MAAM,GAAG,GAAG;AAClC,YAAM,eAAe;AACrB,qBAAS,YAAT,mBAAkB;AAAA,IACpB;AAAA,EAAA;AAGI,QAAA,eAAqD,CAAC,UAAU;;AAChE,QAAA;AAEJ,QAAI,OAAO;AACT,YAAM,IAAI;AACH,cAAA,OAAE,OAAO,UAAT,mBAAiB;AAAA,IAC1B;AAEI,QAAA,QAAQ,KAAK,OAAO,SAAS;AAC/B;AAAA,IACF;AAEA,mCAAO;AACP,aAAS,IAAI;AAEb,QAAI,SAAS,SAAS;AACpB,eAAS,QAAQ,QAAQ;AAAA,IAC3B;AAAA,EAAA;AAGF,SACGM,2BAAAA,KAAA,QAAA,EAAK,WAAW,SAAS,gBAAc,QACtC,UAAA;AAAA,IAAAJ,2BAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK;AAAA,QACL,WAAU;AAAA,QACV;AAAA,QACA,OAAO,EAAE,SAAS,OAAO;AAAA,QACzB,MAAK;AAAA,QACL,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA,gBAAa;AAAA,MAAA;AAAA,IACf;AAAA,IACCA,2BAAA,IAAA,SAAA,EAAM,SAAS,IAAI,WAAU,sBAC5B,UAAAA,2BAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAG;AAAA,QACJ;AAAA,QACA,UAAU,WAAW,KAAK;AAAA,QAC1B,MAAK;AAAA,QACL,WAAW;AAAA,QACX,SAAS;AAAA,QAER;AAAA,MAAA;AAAA,IAAA,GAEL;AAAA,EACF,EAAA,CAAA;AAEJ;ACjEA,MAAM,sBAAsBJ,MAAA,WAA+C,CAAC,OAAO,QAAQ;AACnF,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,OAAO;AAAA,IACP,WAAW;AAAA,IACX,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,gBAAgB,SAAS;AAAA,OACtB;AAAA,EACD,IAAA;AAEE,QAAA,YAAyB,UAAUC,UAAO,OAAA;AAEhD,QAAM,UAAUC,QAAA;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ,WAAW;AAAA,IACnB;AAAA,EAAA;AAGI,QAAA,aAAaC,mBAAa,MAAM;AAAA,IACpC,KAAK;AAAA,IACL,MAAM,KAAK,MAAM,QAAQ;AAAA,IACzB,eAAe;AAAA,IACf,WAAWD,QAAAA,GAAG,KAAK,MAAM,WAAW,aAAa;AAAA,EAAA,CAClD;AAED,QAAM,iBAAiB,MAAM;AACvB,QAAA,WAAWG,qBAAe,QAAQ,GAAG;AAChC,aAAAF,MAAA,aAAa,UAAU,QAAW,UAAU;AAAA,IACrD;AAEO,WAAA;AAAA,EAAA;AAGH,QAAA,cAAc,CAAC,UAAyE;AACxF,QAAA;AAAU,aAAO,MAAM;AAE3B,eAAW,QAAQ,KAAK;AAAA,EAAA;AAGpB,QAAA,gBAAyD,CAAC,UAAU;AACpE,QAAA,MAAM,kBAAkB,mBAAmB;AACvC,YAAA,eAAe,CAAC,YAAY,GAAG;AAErC,UAAI,aAAa,SAAS,MAAM,GAAG,GAAG;AACpC,cAAM,eAAe;AACrB,cAAM,OAAO,MAAM;AACnB,aAAK,MAAM;AAAA,MACb;AAAA,IACF;AAAA,EAAA;AAIA,SAAAC,2BAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA,WAAW,aAAa;AAAA,MACxB;AAAA,MACA,gBAAc;AAAA,MACb,GAAG;AAAA,MAEH,UAAe,eAAA;AAAA,IAAA;AAAA,EAAA;AAGtB,CAAC;AAED,oBAAoB,cAAc;AAE5B,MAAA,aAAaE,WAAK,mBAAmB;;;;;"}
{"version":3,"file":"index.es.js","sources":["../src/Portal.tsx"],"sourcesContent":["import type { HTMLAttributes } from 'react';\n\nimport { forwardRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\ntype PortalProps = HTMLAttributes<HTMLDivElement> & {\n  container?: HTMLElement | null;\n  'data-test-id'?: string;\n};\n\nconst Portal = forwardRef<HTMLDivElement, PortalProps>(\n  (\n    { container = globalThis?.document?.body, 'data-test-id': testId = 'portal', ...props },\n    ref\n  ) => {\n    const [mounted, setMounted] = useState(false);\n\n    useEffect(() => {\n      setMounted(true);\n    }, []);\n\n    return mounted && container\n      ? createPortal(<div {...props} ref={ref} data-test-id={testId} />, container)\n      : null;\n  }\n);\n\nPortal.displayName = 'Portal';\n\nexport { Portal };\nexport type { PortalProps };\n"],"names":[],"mappings":";;;AAUA,MAAM,SAAS;AAAA,EACb,CACE,EAAE,aAAY,uDAAY,aAAZ,mBAAsB,SAAM,gBAAgB,SAAS,aAAa,MAAM,GACtF,QACG;AACH,UAAM,CAAC,SAAS,UAAU,IAAI,SAAS,KAAK;AAE5C,cAAU,MAAM;AACd,iBAAW,IAAI;AAAA,IACjB,GAAG,CAAE,CAAA;AAEL,WAAO,WAAW,YACd,aAAa,oBAAC,OAAK,EAAA,GAAG,OAAO,KAAU,gBAAc,OAAA,CAAQ,GAAI,SAAS,IAC1E;AAAA,EACN;AACF;AAEA,OAAO,cAAc;"}
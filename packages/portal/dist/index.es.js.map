{"version":3,"file":"index.es.js","sources":["../src/Portal.tsx"],"sourcesContent":["import type { HTMLAttributes } from 'react';\n\nimport { forwardRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\ntype PortalProps = HTMLAttributes<HTMLDivElement> & {\n  container?: HTMLElement | null;\n  'data-test-id'?: string;\n};\n\nconst Portal = forwardRef<HTMLDivElement, PortalProps>(\n  (\n    { container = globalThis?.document?.body, 'data-test-id': testId = 'portal', ...props },\n    ref\n  ) => {\n    const [mounted, setMounted] = useState(false);\n\n    useEffect(() => {\n      setMounted(true);\n    }, []);\n\n    return mounted && container\n      ? createPortal(<div {...props} ref={ref} data-test-id={testId} />, container)\n      : null;\n  }\n);\n\nPortal.displayName = 'Portal';\n\nexport { Portal };\nexport type { PortalProps };\n"],"names":["Portal","forwardRef","container","globalThis","document","body","testId","props","ref","mounted","setMounted","useState","useEffect","createPortal","_jsx","displayName"],"mappings":";;;AAUMA,MAAAA,SAASC,WACb,CACE;AAAA,EAAEC,aAAYC,uDAAYC,aAAZD,mBAAsBE;AAAAA,EAAM,gBAAgBC,SAAS;AAAA,KAAaC;AAAM,GACtFC,QACG;AACH,QAAM,CAACC,SAASC,UAAU,IAAIC,SAAS,KAAK;AAE5CC,YAAU,MAAM;AACdF,eAAW,IAAI;AAAA,EACjB,GAAG,CAAE,CAAA;AAEL,SAAOD,WAAWP,YACdW,aAAaC,oBAAA,OAAA;AAAA,IAAA,GAASP;AAAAA,IAAO;AAAA,IAAU,gBAAcD;AAAAA,EAAAA,CAAO,GAAKJ,SAAS,IAC1E;AACN,CAAC;AAGHF,OAAOe,cAAc;"}
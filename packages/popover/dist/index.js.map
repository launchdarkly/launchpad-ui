{"version":3,"file":"index.js","sources":["../src/Popover.tsx"],"sourcesContent":["import type { OffsetOptions } from '@floating-ui/core';\nimport type { ComputePositionConfig, Placement, Strategy } from '@floating-ui/dom';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent,\n  PointerEvent,\n  ReactElement,\n  ReactHTML,\n  ReactNode,\n  Ref,\n  RefObject,\n} from 'react';\n\nimport { arrow, computePosition, flip, offset as floatOffset, shift } from '@floating-ui/dom';\nimport { FocusTrap } from '@launchpad-ui/focus-trap';\nimport { Overlay } from '@launchpad-ui/overlay';\nimport { cx } from 'classix';\nimport { LazyMotion, m } from 'framer-motion';\nimport {\n  Children,\n  cloneElement,\n  createElement,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\n\nimport styles from './styles/Popover.module.css';\n\nconst loadFeatures = () =>\n  import(\n    /* webpackChunkName: \"lp-popover-framer-features\" */\n    /* webpackExports: \"domAnimation\" */\n    'framer-motion'\n  ).then((res) => res.domAnimation);\n\ntype Offset = OffsetOptions;\n\ntype PopoverProps = {\n  allowBoundaryElementOverflow?: boolean;\n  content?: string | JSX.Element | JSX.Element[];\n  children: ReactNode;\n  disabled?: boolean;\n  disablePlacementFlip?: boolean;\n  enforceFocus?: boolean;\n  hoverCloseDelay?: number;\n  hoverOpenDelay?: number;\n  interactionKind?: 'hover' | 'hover-target-only' | 'hover-or-focus' | 'click';\n  isFixed?: boolean;\n  isModal?: boolean;\n  isOpen?: boolean;\n  offset?: Offset;\n  onClick?(): void;\n  onClose?(event?: Event): void;\n  onInteraction?(isOpen: boolean): void;\n  placement?: Placement;\n  popoverClassName?: string;\n  popoverContentClassName?: string;\n  restrictHeight?: boolean;\n  restrictWidth?: boolean;\n  rootElementStyle?: CSSProperties;\n  rootElementTag?: keyof ReactHTML;\n  target?: string | JSX.Element;\n  targetElementRef?: Ref<Element>;\n  targetClassName?: string;\n  targetTestId?: string;\n  enableArrow?: boolean;\n  'data-test-id'?: string;\n};\n\ntype PopoverTargetProps = {\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onPointerEnter?: (event: PointerEvent) => void;\n  onPointerLeave?: (event: PointerEvent) => void;\n  onFocus?: (event: FocusEvent) => void;\n  onBlur?: (event: FocusEvent) => void;\n  onClick?: (event: MouseEvent) => void;\n  ref: RefObject<HTMLElement>;\n  className?: string;\n  isopen?: boolean;\n  'data-test-id': string;\n  style?: CSSProperties;\n};\n\ntype PopoverContentProps = {\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onPointerEnter?: (event: PointerEvent) => void;\n  onPointerLeave?: (event: PointerEvent) => void;\n  onClick?: (event: MouseEvent) => void;\n};\n\nconst isOrContainsElement = (referenceElement: Element, element: Element) => {\n  return referenceElement === element || (referenceElement && referenceElement.contains(element));\n};\n\n/**\n * Popover component driven by floating-ui.\n *\n * If you need more control over the popover's behavior,\n * you may specify the `isOpen` prop to use the component\n * in controlled mode.\n *\n */\nconst Popover = ({\n  rootElementTag = 'span',\n  placement = 'bottom',\n  restrictHeight = true,\n  restrictWidth = true,\n  isModal = false,\n  isFixed = false,\n  interactionKind = 'click',\n  hoverOpenDelay = 250,\n  hoverCloseDelay = 250,\n  disablePlacementFlip = false,\n  allowBoundaryElementOverflow = false,\n  isOpen: isOpenProp,\n  enableArrow,\n  enforceFocus,\n  onClick,\n  onInteraction,\n  onClose,\n  disabled,\n  children,\n  target: targetProp,\n  content: contentProp,\n  targetClassName,\n  targetTestId,\n  popoverClassName,\n  popoverContentClassName,\n  rootElementStyle,\n  offset,\n  targetElementRef,\n  'data-test-id': testId = 'popover',\n}: PopoverProps) => {\n  const [isOpen, setIsOpen] = useState(isOpenProp ?? undefined);\n  const [popoverElement, setPopoverElement] = useState<HTMLElement | null>();\n\n  const targetRef = useRef<HTMLElement>(null);\n  const contentRef = useCallback((node: HTMLElement | null) => {\n    if (node !== null) {\n      return setPopoverElement(node);\n    }\n    return;\n  }, []);\n  const arrowRef = useRef<HTMLDivElement>(null);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const optionsRef = useRef<Partial<ComputePositionConfig>>();\n  const popoverId = useRef(`popover-${useId()}`);\n\n  const updatePosition = useCallback(async () => {\n    const middleware = [];\n\n    if (popoverElement === null || popoverElement === undefined) {\n      return;\n    }\n\n    if (!allowBoundaryElementOverflow) {\n      middleware.push(shift({ padding: 5 }));\n    }\n\n    if (!disablePlacementFlip && !offset) {\n      middleware.push(flip({ padding: 5 }));\n    }\n\n    if (offset) {\n      middleware.push(floatOffset(offset));\n    }\n\n    if (enableArrow && arrowRef.current) {\n      middleware.push(arrow({ element: arrowRef.current }));\n    }\n\n    const hasModal = targetRef.current?.closest('.has-overlay');\n    const strategy: Strategy = isFixed || hasModal ? 'fixed' : 'absolute';\n\n    optionsRef.current = {\n      placement,\n      middleware,\n      strategy,\n    };\n\n    const parentNode = targetRef.current;\n    if (!parentNode || !parentNode.childNodes) {\n      return;\n    }\n\n    const target = parentNode.childNodes[0] as Element;\n    const {\n      x,\n      y,\n      placement: floatPlacement,\n      middlewareData,\n      strategy: floatStrategy,\n    } = await computePosition(target, popoverElement, optionsRef.current);\n\n    if (popoverElement) {\n      Object.assign(popoverElement.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n        position: floatStrategy,\n      });\n\n      popoverElement.dataset.popoverPlacement = floatPlacement;\n    }\n\n    if (enableArrow && arrowRef.current && middlewareData.arrow) {\n      const { x: arrowX, y: arrowY } = middlewareData.arrow;\n\n      const staticSide = {\n        top: 'bottom',\n        right: 'left',\n        bottom: 'top',\n        left: 'right',\n      }[floatPlacement.split('-')[0]];\n\n      if (staticSide) {\n        Object.assign(arrowRef.current?.style, {\n          left: arrowX !== null ? `${arrowX}px` : '',\n          top: arrowY !== null ? `${arrowY}px` : '',\n          right: '',\n          bottom: '',\n          [staticSide]: '5px',\n        });\n      }\n    }\n  }, [\n    allowBoundaryElementOverflow,\n    disablePlacementFlip,\n    enableArrow,\n    isFixed,\n    offset,\n    placement,\n    popoverElement,\n  ]);\n\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const updatePopover = async () => {\n      if (isOpen && !(popoverElement === null || popoverElement === undefined)) {\n        window.addEventListener('scroll', updatePosition, { passive: true });\n        window.addEventListener('resize', updatePosition, { passive: true });\n        await updatePosition();\n      } else {\n        window.removeEventListener('scroll', updatePosition);\n        window.removeEventListener('resize', updatePosition);\n      }\n    };\n    updatePopover();\n  }, [isOpen, contentProp, popoverElement, updatePosition]);\n\n  useEffect(() => {\n    setIsOpen(isOpenProp);\n  }, [isOpenProp]);\n\n  const handleTargetClick = (event: MouseEvent) => {\n    const eventTarget = event.target as Element;\n    onClick?.();\n    if (!disabled && targetRef.current && isOrContainsElement(targetRef.current, eventTarget)) {\n      // always close the menu, and only open unless something prevented the default\n      setOpenState(isOpen ? false : !event.defaultPrevented);\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (!disabled) {\n      setOpenState(true, hoverOpenDelay);\n      attachGlobalListener();\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setOpenState(false, hoverCloseDelay);\n    removeGlobalListener();\n  };\n\n  const handleFocus = () => {\n    if (!disabled) {\n      setOpenState(true);\n      attachGlobalListener();\n    }\n  };\n\n  const handleBlur = () => {\n    setOpenState(false);\n    removeGlobalListener();\n  };\n\n  const handlePopoverClick = (event: MouseEvent) => {\n    const eventTarget = event.target as Element;\n    if (eventTarget?.closest?.('.popover-dismiss')) {\n      setOpenState(false);\n    }\n  };\n\n  const handleOverlayClose = (event: MouseEvent | ReactKeyboardEvent) => {\n    const eventTarget = event.target as Element;\n    if (\n      (targetRef.current && !isOrContainsElement(targetRef.current, eventTarget)) ||\n      event.nativeEvent instanceof KeyboardEvent\n    ) {\n      setOpenState(false);\n    }\n  };\n\n  const setOpenState = (nextIsOpen: boolean, timeout?: number) => {\n    timeoutRef.current && clearTimeout(timeoutRef.current);\n\n    if (typeof timeout !== 'undefined' && timeout > 0) {\n      timeoutRef.current = setTimeout(() => setOpenState(nextIsOpen), timeout);\n    } else {\n      // controlled mode\n      if (isOpenProp === null || isOpenProp === undefined) {\n        setIsOpen(nextIsOpen);\n      } else {\n        typeof onInteraction === 'function' && onInteraction(nextIsOpen);\n      }\n\n      if (!nextIsOpen) {\n        typeof onClose === 'function' && onClose();\n      }\n    }\n  };\n\n  const parseChildren = (): {\n    target: ReactNode;\n    content: ReactNode;\n  } => {\n    const [targetChild, contentChild] = Children.toArray(children);\n\n    return {\n      target: targetChild ?? targetProp,\n      content: contentChild ?? contentProp,\n    };\n  };\n\n  const attachGlobalListener = () => {\n    document.addEventListener('keydown', handleKeyDown);\n  };\n\n  const removeGlobalListener = () => {\n    document.removeEventListener('keydown', handleKeyDown);\n  };\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      setIsOpen(false);\n      removeGlobalListener();\n    }\n  };\n\n  const renderPopover = (content: ReactNode) => {\n    const classes = cx(styles.Popover, popoverClassName);\n\n    let handlers: PopoverContentProps = {};\n\n    if (interactionKind === 'hover') {\n      handlers = {\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        onPointerEnter: handleMouseEnter,\n        onPointerLeave: handleMouseLeave,\n      };\n    }\n\n    if (interactionKind !== 'hover-target-only') {\n      handlers.onClick = handlePopoverClick;\n    }\n\n    const popoverContent = (\n      <LazyMotion strict features={loadFeatures}>\n        <m.div\n          transition={{ duration: 0.15 }}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className={cx(\n            styles['Popover-content'],\n            restrictWidth && styles['Popover-content--restrictWidth'],\n            popoverContentClassName\n          )}\n          tabIndex={interactionKind === 'click' ? -1 : undefined}\n        >\n          {enableArrow && <div id=\"arrow\" ref={arrowRef}></div>}\n          {restrictHeight ? <div className={styles['Popover-scroller']}>{content}</div> : content}\n        </m.div>\n      </LazyMotion>\n    );\n\n    return (\n      <div\n        id={popoverId.current}\n        ref={contentRef}\n        className={classes}\n        role=\"tooltip\"\n        data-test-id={testId}\n        aria-hidden={!isOpen}\n        {...handlers}\n      >\n        {interactionKind === 'click' ? (\n          <FocusTrap autoFocus>{popoverContent}</FocusTrap>\n        ) : (\n          popoverContent\n        )}\n      </div>\n    );\n  };\n\n  const { target, content } = parseChildren();\n  const hasEmptyContent =\n    content === null || content === undefined || (typeof content === 'string' && !content);\n  const isTargetDisabled = isValidElement(target) ? !!target?.props?.disabled : false;\n\n  const targetProps: PopoverTargetProps = {\n    ref: targetRef,\n    className: cx(\n      styles['Popover-target'],\n      targetClassName,\n      isTargetDisabled && styles['Popover-target--disabled']\n    ),\n    style: rootElementStyle,\n    'data-test-id': targetTestId || 'popover-target',\n  };\n\n  if (\n    interactionKind === 'hover' ||\n    interactionKind === 'hover-target-only' ||\n    interactionKind === 'hover-or-focus'\n  ) {\n    targetProps.onMouseEnter = handleMouseEnter;\n    targetProps.onMouseLeave = handleMouseLeave;\n    targetProps.onPointerEnter = handleMouseEnter;\n    targetProps.onPointerLeave = handleMouseLeave;\n    if (interactionKind === 'hover-or-focus') {\n      targetProps.onFocus = handleFocus;\n      targetProps.onBlur = handleBlur;\n    }\n  } else {\n    targetProps.onClick = handleTargetClick;\n  }\n\n  return createElement(\n    rootElementTag,\n    targetProps,\n    cloneElement(target as ReactElement, {\n      ref: targetElementRef,\n      ...(isOpen && { 'aria-describedby': popoverId.current }),\n      'data-state': isOpen ? 'open' : 'closed',\n    }),\n    <Overlay\n      isOpen={!!isOpen && !hasEmptyContent}\n      canOutsideClickClose={interactionKind === 'click'}\n      isModal={isModal}\n      enforceFocus={enforceFocus}\n      onClose={handleOverlayClose}\n    >\n      <div>{renderPopover(content)}</div>\n    </Overlay>\n  );\n};\n\nexport { Popover };\nexport type { Offset, PopoverProps };\n"],"names":["loadFeatures","then","res","domAnimation","isOrContainsElement","referenceElement","element","contains","Popover","rootElementTag","placement","restrictHeight","restrictWidth","isModal","isFixed","interactionKind","hoverOpenDelay","hoverCloseDelay","disablePlacementFlip","allowBoundaryElementOverflow","isOpen","isOpenProp","enableArrow","enforceFocus","onClick","onInteraction","onClose","disabled","children","target","targetProp","content","contentProp","targetClassName","targetTestId","popoverClassName","popoverContentClassName","rootElementStyle","offset","targetElementRef","testId","setIsOpen","useState","undefined","popoverElement","setPopoverElement","targetRef","useRef","contentRef","useCallback","node","arrowRef","timeoutRef","optionsRef","popoverId","useId","updatePosition","middleware","push","shift","padding","flip","floatOffset","current","arrow","hasModal","closest","strategy","parentNode","childNodes","x","y","floatPlacement","middlewareData","floatStrategy","computePosition","assign","style","left","top","position","dataset","popoverPlacement","arrowX","arrowY","staticSide","right","bottom","split","useEffect","clearTimeout","updatePopover","addEventListener","passive","removeEventListener","handleTargetClick","event","eventTarget","setOpenState","defaultPrevented","handleMouseEnter","handleMouseLeave","handleFocus","handleBlur","handlePopoverClick","handleOverlayClose","nativeEvent","KeyboardEvent","nextIsOpen","timeout","setTimeout","parseChildren","targetChild","contentChild","Children","toArray","attachGlobalListener","handleKeyDown","removeGlobalListener","key","renderPopover","classes","cx","styles","handlers","onMouseEnter","onMouseLeave","onPointerEnter","onPointerLeave","popoverContent","LazyMotion","_jsxs","m","duration","opacity","_jsx","FocusTrap","hasEmptyContent","isTargetDisabled","isValidElement","props","targetProps","ref","className","onFocus","onBlur","createElement","cloneElement","Overlay"],"mappings":"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"}
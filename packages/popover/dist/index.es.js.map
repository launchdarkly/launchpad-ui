{"version":3,"file":"index.es.js","sources":["../src/Popover.tsx"],"sourcesContent":["import type { OffsetOptions } from '@floating-ui/core';\nimport type { ComputePositionConfig, Placement, Strategy } from '@floating-ui/dom';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent,\n  PointerEvent,\n  ReactElement,\n  ReactHTML,\n  ReactNode,\n  Ref,\n  RefObject,\n} from 'react';\n\nimport { arrow, computePosition, flip, offset as floatOffset, shift } from '@floating-ui/dom';\nimport { FocusTrap } from '@launchpad-ui/focus-trap';\nimport { Overlay } from '@launchpad-ui/overlay';\nimport { cx } from 'classix';\nimport { LazyMotion, m } from 'framer-motion';\nimport {\n  Children,\n  cloneElement,\n  createElement,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\n\nimport styles from './styles/Popover.module.css';\n\nconst loadFeatures = () =>\n  import(\n    /* webpackChunkName: \"lp-popover-framer-features\" */\n    /* webpackExports: \"domAnimation\" */\n    'framer-motion'\n  ).then((res) => res.domAnimation);\n\ntype Offset = OffsetOptions;\n\ntype PopoverProps = {\n  allowBoundaryElementOverflow?: boolean;\n  content?: string | JSX.Element | JSX.Element[];\n  children: ReactNode;\n  disabled?: boolean;\n  disablePlacementFlip?: boolean;\n  enforceFocus?: boolean;\n  hoverCloseDelay?: number;\n  hoverOpenDelay?: number;\n  interactionKind?: 'hover' | 'hover-target-only' | 'hover-or-focus' | 'click';\n  isFixed?: boolean;\n  isModal?: boolean;\n  isOpen?: boolean;\n  offset?: Offset;\n  onClick?(): void;\n  onClose?(event?: Event): void;\n  onInteraction?(isOpen: boolean): void;\n  placement?: Placement;\n  popoverClassName?: string;\n  popoverContentClassName?: string;\n  restrictHeight?: boolean;\n  restrictWidth?: boolean;\n  rootElementStyle?: CSSProperties;\n  rootElementTag?: keyof ReactHTML;\n  target?: string | JSX.Element;\n  targetElementRef?: Ref<Element>;\n  targetClassName?: string;\n  targetTestId?: string;\n  enableArrow?: boolean;\n  'data-test-id'?: string;\n};\n\ntype PopoverTargetProps = {\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onPointerEnter?: (event: PointerEvent) => void;\n  onPointerLeave?: (event: PointerEvent) => void;\n  onFocus?: (event: FocusEvent) => void;\n  onBlur?: (event: FocusEvent) => void;\n  onClick?: (event: MouseEvent) => void;\n  ref: RefObject<HTMLElement>;\n  className?: string;\n  isopen?: boolean;\n  'data-test-id': string;\n  style?: CSSProperties;\n};\n\ntype PopoverContentProps = {\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n  onPointerEnter?: (event: PointerEvent) => void;\n  onPointerLeave?: (event: PointerEvent) => void;\n  onClick?: (event: MouseEvent) => void;\n};\n\nconst isOrContainsElement = (referenceElement: Element, element: Element) => {\n  return referenceElement === element || (referenceElement && referenceElement.contains(element));\n};\n\n/**\n * Popover component driven by floating-ui.\n *\n * If you need more control over the popover's behavior,\n * you may specify the `isOpen` prop to use the component\n * in controlled mode.\n *\n */\nconst Popover = ({\n  rootElementTag = 'span',\n  placement = 'bottom',\n  restrictHeight = true,\n  restrictWidth = true,\n  isModal = false,\n  isFixed = false,\n  interactionKind = 'click',\n  hoverOpenDelay = 250,\n  hoverCloseDelay = 250,\n  disablePlacementFlip = false,\n  allowBoundaryElementOverflow = false,\n  isOpen: isOpenProp,\n  enableArrow,\n  enforceFocus,\n  onClick,\n  onInteraction,\n  onClose,\n  disabled,\n  children,\n  target: targetProp,\n  content: contentProp,\n  targetClassName,\n  targetTestId,\n  popoverClassName,\n  popoverContentClassName,\n  rootElementStyle,\n  offset,\n  targetElementRef,\n  'data-test-id': testId = 'popover',\n}: PopoverProps) => {\n  const [isOpen, setIsOpen] = useState(isOpenProp ?? undefined);\n  const [popoverElement, setPopoverElement] = useState<HTMLElement | null>();\n\n  const targetRef = useRef<HTMLElement>(null);\n  const contentRef = useCallback((node: HTMLElement | null) => {\n    if (node !== null) {\n      return setPopoverElement(node);\n    }\n    return;\n  }, []);\n  const arrowRef = useRef<HTMLDivElement>(null);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const optionsRef = useRef<Partial<ComputePositionConfig>>();\n  const popoverId = useRef(`popover-${useId()}`);\n\n  const updatePosition = useCallback(async () => {\n    const middleware = [];\n\n    if (popoverElement === null || popoverElement === undefined) {\n      return;\n    }\n\n    if (!allowBoundaryElementOverflow) {\n      middleware.push(shift({ padding: 5 }));\n    }\n\n    if (!disablePlacementFlip && !offset) {\n      middleware.push(flip({ padding: 5 }));\n    }\n\n    if (offset) {\n      middleware.push(floatOffset(offset));\n    }\n\n    if (enableArrow && arrowRef.current) {\n      middleware.push(arrow({ element: arrowRef.current }));\n    }\n\n    const hasModal = targetRef.current?.closest('.has-overlay');\n    const strategy: Strategy = isFixed || hasModal ? 'fixed' : 'absolute';\n\n    optionsRef.current = {\n      placement,\n      middleware,\n      strategy,\n    };\n\n    const parentNode = targetRef.current;\n    if (!parentNode || !parentNode.childNodes) {\n      return;\n    }\n\n    const target = parentNode.childNodes[0] as Element;\n    const {\n      x,\n      y,\n      placement: floatPlacement,\n      middlewareData,\n      strategy: floatStrategy,\n    } = await computePosition(target, popoverElement, optionsRef.current);\n\n    if (popoverElement) {\n      Object.assign(popoverElement.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n        position: floatStrategy,\n      });\n\n      popoverElement.dataset.popoverPlacement = floatPlacement;\n    }\n\n    if (enableArrow && arrowRef.current && middlewareData.arrow) {\n      const { x: arrowX, y: arrowY } = middlewareData.arrow;\n\n      const staticSide = {\n        top: 'bottom',\n        right: 'left',\n        bottom: 'top',\n        left: 'right',\n      }[floatPlacement.split('-')[0]];\n\n      if (staticSide) {\n        Object.assign(arrowRef.current?.style, {\n          left: arrowX !== null ? `${arrowX}px` : '',\n          top: arrowY !== null ? `${arrowY}px` : '',\n          right: '',\n          bottom: '',\n          [staticSide]: '5px',\n        });\n      }\n    }\n  }, [\n    allowBoundaryElementOverflow,\n    disablePlacementFlip,\n    enableArrow,\n    isFixed,\n    offset,\n    placement,\n    popoverElement,\n  ]);\n\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const updatePopover = async () => {\n      if (isOpen && !(popoverElement === null || popoverElement === undefined)) {\n        window.addEventListener('scroll', updatePosition, { passive: true });\n        window.addEventListener('resize', updatePosition, { passive: true });\n        await updatePosition();\n      } else {\n        window.removeEventListener('scroll', updatePosition);\n        window.removeEventListener('resize', updatePosition);\n      }\n    };\n    updatePopover();\n  }, [isOpen, contentProp, popoverElement, updatePosition]);\n\n  useEffect(() => {\n    setIsOpen(isOpenProp);\n  }, [isOpenProp]);\n\n  const handleTargetClick = (event: MouseEvent) => {\n    const eventTarget = event.target as Element;\n    onClick?.();\n    if (!disabled && targetRef.current && isOrContainsElement(targetRef.current, eventTarget)) {\n      // always close the menu, and only open unless something prevented the default\n      setOpenState(isOpen ? false : !event.defaultPrevented);\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (!disabled) {\n      setOpenState(true, hoverOpenDelay);\n      attachGlobalListener();\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setOpenState(false, hoverCloseDelay);\n    removeGlobalListener();\n  };\n\n  const handleFocus = () => {\n    if (!disabled) {\n      setOpenState(true);\n      attachGlobalListener();\n    }\n  };\n\n  const handleBlur = () => {\n    setOpenState(false);\n    removeGlobalListener();\n  };\n\n  const handlePopoverClick = (event: MouseEvent) => {\n    const eventTarget = event.target as Element;\n    if (eventTarget?.closest?.('.popover-dismiss')) {\n      setOpenState(false);\n    }\n  };\n\n  const handleOverlayClose = (event: MouseEvent | ReactKeyboardEvent) => {\n    const eventTarget = event.target as Element;\n    if (\n      (targetRef.current && !isOrContainsElement(targetRef.current, eventTarget)) ||\n      event.nativeEvent instanceof KeyboardEvent\n    ) {\n      setOpenState(false);\n    }\n  };\n\n  const setOpenState = (nextIsOpen: boolean, timeout?: number) => {\n    timeoutRef.current && clearTimeout(timeoutRef.current);\n\n    if (typeof timeout !== 'undefined' && timeout > 0) {\n      timeoutRef.current = setTimeout(() => setOpenState(nextIsOpen), timeout);\n    } else {\n      // controlled mode\n      if (isOpenProp === null || isOpenProp === undefined) {\n        setIsOpen(nextIsOpen);\n      } else {\n        typeof onInteraction === 'function' && onInteraction(nextIsOpen);\n      }\n\n      if (!nextIsOpen) {\n        typeof onClose === 'function' && onClose();\n      }\n    }\n  };\n\n  const parseChildren = (): {\n    target: ReactNode;\n    content: ReactNode;\n  } => {\n    const [targetChild, contentChild] = Children.toArray(children);\n\n    return {\n      target: targetChild ?? targetProp,\n      content: contentChild ?? contentProp,\n    };\n  };\n\n  const attachGlobalListener = () => {\n    document.addEventListener('keydown', handleKeyDown);\n  };\n\n  const removeGlobalListener = () => {\n    document.removeEventListener('keydown', handleKeyDown);\n  };\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      setIsOpen(false);\n      removeGlobalListener();\n    }\n  };\n\n  const renderPopover = (content: ReactNode) => {\n    const classes = cx(styles.Popover, popoverClassName);\n\n    let handlers: PopoverContentProps = {};\n\n    if (interactionKind === 'hover') {\n      handlers = {\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        onPointerEnter: handleMouseEnter,\n        onPointerLeave: handleMouseLeave,\n      };\n    }\n\n    if (interactionKind !== 'hover-target-only') {\n      handlers.onClick = handlePopoverClick;\n    }\n\n    const popoverContent = (\n      <LazyMotion strict features={loadFeatures}>\n        <m.div\n          transition={{ duration: 0.15 }}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className={cx(\n            styles['Popover-content'],\n            restrictWidth && styles['Popover-content--restrictWidth'],\n            popoverContentClassName\n          )}\n          tabIndex={interactionKind === 'click' ? -1 : undefined}\n        >\n          {enableArrow && <div id=\"arrow\" ref={arrowRef}></div>}\n          {restrictHeight ? <div className={styles['Popover-scroller']}>{content}</div> : content}\n        </m.div>\n      </LazyMotion>\n    );\n\n    return (\n      <div\n        id={popoverId.current}\n        ref={contentRef}\n        className={classes}\n        role=\"tooltip\"\n        data-test-id={testId}\n        aria-hidden={!isOpen}\n        {...handlers}\n      >\n        {interactionKind === 'click' ? (\n          <FocusTrap autoFocus>{popoverContent}</FocusTrap>\n        ) : (\n          popoverContent\n        )}\n      </div>\n    );\n  };\n\n  const { target, content } = parseChildren();\n  const hasEmptyContent =\n    content === null || content === undefined || (typeof content === 'string' && !content);\n  const isTargetDisabled = isValidElement(target) ? !!target?.props?.disabled : false;\n\n  const targetProps: PopoverTargetProps = {\n    ref: targetRef,\n    className: cx(\n      styles['Popover-target'],\n      targetClassName,\n      isTargetDisabled && styles['Popover-target--disabled']\n    ),\n    style: rootElementStyle,\n    'data-test-id': targetTestId || 'popover-target',\n  };\n\n  if (\n    interactionKind === 'hover' ||\n    interactionKind === 'hover-target-only' ||\n    interactionKind === 'hover-or-focus'\n  ) {\n    targetProps.onMouseEnter = handleMouseEnter;\n    targetProps.onMouseLeave = handleMouseLeave;\n    targetProps.onPointerEnter = handleMouseEnter;\n    targetProps.onPointerLeave = handleMouseLeave;\n    if (interactionKind === 'hover-or-focus') {\n      targetProps.onFocus = handleFocus;\n      targetProps.onBlur = handleBlur;\n    }\n  } else {\n    targetProps.onClick = handleTargetClick;\n  }\n\n  return createElement(\n    rootElementTag,\n    targetProps,\n    cloneElement(target as ReactElement, {\n      ref: targetElementRef,\n      ...(isOpen && { 'aria-describedby': popoverId.current }),\n      'data-state': isOpen ? 'open' : 'closed',\n    }),\n    <Overlay\n      isOpen={!!isOpen && !hasEmptyContent}\n      canOutsideClickClose={interactionKind === 'click'}\n      isModal={isModal}\n      enforceFocus={enforceFocus}\n      onClose={handleOverlayClose}\n    >\n      <div>{renderPopover(content)}</div>\n    </Overlay>\n  );\n};\n\nexport { Popover };\nexport type { Offset, PopoverProps };\n"],"names":["offset","floatOffset","_a","target","content"],"mappings":"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"}
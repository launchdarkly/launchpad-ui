{"version":3,"file":"index.js","sources":["../src/MenuBase.tsx","../src/MenuDivider.tsx","../src/MenuItem.tsx","../src/MenuItemList.tsx","../src/MenuSearch.tsx","../src/utils.ts","../src/Menu.tsx"],"sourcesContent":["import type { MenuProps } from './Menu';\nimport type { ComponentPropsWithRef } from 'react';\n\nimport { cx } from 'classix';\nimport { forwardRef } from 'react';\n\nimport './styles/Menu.css';\n\ntype MenuBaseProps = ComponentPropsWithRef<'div'> & {\n  isVirtual?: boolean;\n  size?: MenuProps<string>['size'];\n};\n\nconst MenuBase = forwardRef<HTMLDivElement, MenuBaseProps>(\n  ({ children, size, isVirtual, ...props }, ref) => {\n    const classes = cx('Menu', isVirtual && 'Menu--isVirtual', size && `MenuSize--${size}`);\n\n    return (\n      <div {...props} role=\"menu\" className={classes} ref={ref}>\n        {children}\n      </div>\n    );\n  }\n);\n\nMenuBase.displayName = 'MenuBase';\n\nexport { MenuBase };\nexport type { MenuBaseProps };\n","import type { SeparatorProps } from '@react-aria/separator';\nimport type { RefObject } from 'react';\n\nimport { useSeparator } from '@react-aria/separator';\n\nimport './styles/Menu.css';\n\ntype MenuDividerProps = SeparatorProps & {\n  innerRef?: RefObject<HTMLDivElement>;\n  'data-test-id'?: string;\n};\n\nconst MenuDivider = ({\n  elementType = 'div',\n  orientation,\n  innerRef,\n  'data-test-id': testId = 'menu-divider',\n}: MenuDividerProps) => {\n  const { separatorProps } = useSeparator({\n    orientation,\n    elementType,\n  });\n\n  return <div {...separatorProps} data-test-id={testId} ref={innerRef} className=\"Menu-divider\" />;\n};\n\nexport { MenuDivider };\nexport type { MenuDividerProps };\n","import type { Icon } from '@launchpad-ui/icons';\nimport type { PopoverPlacement } from '@launchpad-ui/popover';\nimport type { ComponentPropsWithRef, ElementType, PropsWithRef, ReactElement } from 'react';\n\nimport { Tooltip } from '@launchpad-ui/tooltip';\nimport { Slot } from '@radix-ui/react-slot';\nimport { FocusRing } from '@react-aria/focus';\nimport { cx } from 'classix';\nimport { Link } from 'react-router-dom';\n\nimport './styles/Menu.css';\n\n// Merge two types and get rid of overlapping definitions\ntype Merge<T, U> = Omit<T, keyof U> & U;\n\ntype PropsWithComponent<P, T extends ElementType> = P & { component?: T };\n\ntype PolymorphicPropsWithRef<P, T extends ElementType> = Merge<\n  T extends keyof JSX.IntrinsicElements\n    ? PropsWithRef<JSX.IntrinsicElements[T]>\n    : ComponentPropsWithRef<T>,\n  PropsWithComponent<P, T>\n>;\n\ntype MenuItemOwnProps = {\n  isHighlighted?: boolean;\n  icon?: typeof Icon | null;\n  disabled?: boolean;\n  nested?: boolean;\n  groupHeader?: boolean;\n  tooltip?: string | ReactElement;\n  tooltipOptions?: typeof Tooltip;\n  tooltipPlacement?: PopoverPlacement;\n  asChild?: boolean;\n  'data-test-id'?: string;\n};\n\nconst defaultElement = 'button';\n\ntype MenuItemProps<P, T extends ElementType = typeof defaultElement> = PolymorphicPropsWithRef<\n  | (MenuItemOwnProps & {\n      item: P; // Infer the type if it is included\n    })\n  | (MenuItemOwnProps & {\n      item?: undefined;\n    }),\n  T\n>;\n\nconst MenuItem = <P, T extends ElementType = typeof defaultElement>({\n  ...props\n}: MenuItemProps<P, T>) => {\n  const {\n    // TODO: remove component prop once we migrate over to asChild format\n    component,\n    children,\n    isHighlighted,\n    icon: Icon,\n    nested,\n    groupHeader,\n    item,\n    disabled,\n    className,\n    tooltip,\n    role = 'menuitem',\n    tooltipPlacement,\n    onKeyDown,\n    tooltipOptions,\n    asChild,\n    'data-test-id': testId = 'menu-item',\n    ...rest\n  } = props;\n\n  const Component: ElementType = component || (asChild ? Slot : defaultElement);\n\n  const renderedItem = (\n    <FocusRing focusRingClass=\"has-focus\">\n      <Component\n        {...rest}\n        disabled={disabled}\n        aria-disabled={disabled ? disabled : undefined}\n        className={cx(\n          'Menu-item',\n          className,\n          isHighlighted && 'is-highlighted',\n          nested && 'Menu-item--nested',\n          groupHeader && 'Menu-item--header'\n        )}\n        data-test-id={testId}\n        role={role}\n        onKeyDown={onKeyDown}\n      >\n        {asChild ? (\n          children\n        ) : (\n          <>\n            {Icon && (\n              <span className=\"Menu-item-icon\">\n                <Icon size=\"small\" />\n              </span>\n            )}\n            {children}\n          </>\n        )}\n      </Component>\n    </FocusRing>\n  );\n\n  if (tooltip) {\n    return (\n      <Tooltip\n        content={tooltip}\n        rootElementStyle={{ display: 'block' }}\n        allowBoundaryElementOverflow\n        placement={tooltipPlacement ? tooltipPlacement : 'bottom'}\n        {...(tooltipOptions || {})}\n      >\n        {renderedItem}\n      </Tooltip>\n    );\n  }\n\n  return renderedItem;\n};\n\ntype MenuItemLinkOwnProps = {\n  disabled?: boolean;\n  useHistory?: boolean;\n  newTab?: boolean;\n};\n\ntype MenuItemLinkProps<P, T extends ElementType = typeof Link> =\n  | Merge<Omit<MenuItemProps<P, T>, 'component' | 'item'>, MenuItemLinkOwnProps> &\n      (\n        | {\n            item?: undefined;\n          }\n        | {\n            item: P;\n          }\n      );\n\n// By default, this is a Link component whenever useHistory is\n// explicitly not false\n// TODO: deprecate this component\nconst MenuItemLink = <P, T extends ElementType = typeof Link>({\n  to,\n  disabled = false,\n  useHistory = true,\n  newTab = false,\n  children,\n  ...props\n}: MenuItemLinkProps<P, T>) => {\n  const finalProps = {\n    ...props,\n    disabled,\n    component: useHistory ? Link : ('a' as const),\n    [useHistory ? 'to' : 'href']: disabled ? '' : to,\n    rel: newTab ? 'noopener noreferrer' : undefined,\n    target: newTab ? '_blank' : undefined,\n  };\n\n  // Ideally if this item is disabled, it should be a button rather\n  // than a link https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md\n\n  return <MenuItem {...finalProps}>{children}</MenuItem>;\n};\n\nexport { MenuItem, MenuItemLink };\nexport type { MenuItemProps, MenuItemLinkProps };\n","import type { ComponentPropsWithRef } from 'react';\n\nimport { forwardRef } from 'react';\n\nimport './styles/Menu.css';\n\ntype MenuItemListProps = Omit<ComponentPropsWithRef<'div'>, 'className'>;\n\nconst MenuItemList = forwardRef<HTMLDivElement, MenuItemListProps>(({ children, ...rest }, ref) => (\n  <div {...rest} ref={ref} data-test-id=\"menu-item-list\" className=\"Menu-item-list\">\n    {children}\n  </div>\n));\n\nMenuItemList.displayName = 'MenuItemList';\n\nexport { MenuItemList };\nexport type { MenuItemListProps };\n","import type { ChangeEvent } from 'react';\n\nimport { TextField } from '@launchpad-ui/form';\nimport { forwardRef } from 'react';\n\nimport './styles/Menu.css';\n\ntype MenuSearchProps = {\n  ariaLabel?: string;\n  value?: string;\n  placeholder?: string;\n  onChange?(event: ChangeEvent<HTMLInputElement>): void;\n  'data-test-id'?: string;\n};\n\nconst MenuSearch = forwardRef<HTMLInputElement, MenuSearchProps>((props, ref) => {\n  const { ariaLabel, placeholder, 'data-test-id': testId = 'menu-search', ...finalProps } = props;\n\n  return (\n    <div className=\"Menu-search\">\n      <TextField\n        {...finalProps}\n        ref={ref}\n        className=\"Menu-search-input\"\n        tiny\n        type=\"search\"\n        data-test-id={testId}\n        autoComplete=\"off\"\n        placeholder={placeholder}\n        aria-label={ariaLabel || 'Search'}\n      />\n    </div>\n  );\n});\n\nMenuSearch.displayName = 'MenuSearch';\n\nexport { MenuSearch };\nexport type { MenuSearchProps };\n","import type { EventHandler, KeyboardEvent, SyntheticEvent } from 'react';\n\nconst createItemId = (index: number, id: string) => `${id}-item-${index}`;\n\nconst getNodeForIndex = (index: number | null, menuId: string) =>\n  index === null ? index : document.getElementById(createItemId(index, menuId));\n\nconst handleKeyboardInteractions = (\n  event: KeyboardEvent,\n  keyHandlers: Partial<\n    Record<'handleUp' | 'handleDown' | 'handleEnter', (e: KeyboardEvent) => void>\n  >\n) => {\n  const ops = {\n    ArrowUp: keyHandlers.handleUp,\n    ArrowDown: keyHandlers.handleDown,\n    Enter: keyHandlers.handleEnter,\n  } as Record<string, (e: KeyboardEvent) => void | undefined>;\n\n  if (ops[event.key]) {\n    event.preventDefault();\n    ops[event.key]?.call(globalThis, event);\n  }\n};\n\nconst chainEventHandlers =\n  (...handlers: Array<EventHandler<SyntheticEvent> | undefined>) =>\n  (event: SyntheticEvent) => {\n    handlers.forEach((h) => typeof h === 'function' && h(event));\n  };\n\nexport { createItemId, getNodeForIndex, handleKeyboardInteractions, chainEventHandlers };\n","import type { MenuItemProps } from './MenuItem';\nimport type { FocusManager } from '@react-aria/focus';\nimport type { KeyboardEvent, ReactElement, ReactNode } from 'react';\n\nimport { useFocusManager } from '@react-aria/focus';\nimport { cx } from 'classix';\nimport {\n  Children,\n  cloneElement,\n  useCallback,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useVirtual } from 'react-virtual';\n\nimport { MenuBase } from './MenuBase';\nimport { MenuDivider } from './MenuDivider';\nimport { MenuItem, MenuItemLink } from './MenuItem';\nimport { MenuItemList } from './MenuItemList';\nimport { MenuSearch } from './MenuSearch';\nimport {\n  chainEventHandlers,\n  createItemId,\n  getNodeForIndex,\n  handleKeyboardInteractions,\n} from './utils';\n\ntype ControlledMenuProps<T> = {\n  children: ReactNode;\n  onSelect?: (item: T) => void;\n  /**\n   * Menus items are rendered using react-virtual for\n   * additional rendering performance.\n   */\n  enableVirtualization?: boolean;\n  /**\n   * Class name to be applied to all MenuItem and MenuItemLink components\n   * in the menu.\n   */\n  menuItemClassName?: string;\n  /**\n   * Sets the width of the menu. This is especially useful when using virtual items\n   * since the width cannot be automatically set by the widest element.\n   */\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  /**\n   * Sets the number out of elements rendered outside of the view window\n   * when using virtualization\n   */\n  overscan?: number;\n  /**\n   * Sets the height for each menu item when using virtualization.\n   *\n   */\n  itemHeight?: number;\n  'data-test-id'?: string;\n};\n\ntype MenuProps<T extends number | string> = ControlledMenuProps<T>;\n\nconst Menu = <T extends number | string>(props: MenuProps<T>) => {\n  const {\n    children,\n    menuItemClassName,\n    onSelect,\n    enableVirtualization,\n    itemHeight,\n    size,\n    overscan = 1,\n    'data-test-id': testId = 'menu',\n  } = props;\n\n  const focusManager = useFocusManager();\n\n  const handleArrowDown = useCallback(() => {\n    focusManager.focusNext({ wrap: true });\n  }, [focusManager]);\n\n  const handleArrowUp = useCallback(() => {\n    focusManager.focusPrevious({ wrap: true });\n  }, [focusManager]);\n\n  const reduceItems = useMemo(() => {\n    const childrenProps = Children.toArray(children);\n    if (enableVirtualization) {\n      // the virtualized menu has its own handlers and props\n      let searchElem = null;\n      let elements: ReactElement[] = [];\n      (childrenProps as ReactElement[]).forEach((child: ReactElement) => {\n        switch (child.type) {\n          case MenuSearch:\n            searchElem = child;\n            break;\n          case MenuItem:\n          case MenuItemLink:\n          case MenuDivider:\n            elements = elements.concat(child);\n            break;\n          default:\n            break;\n        }\n      });\n      return { items: elements, searchElement: searchElem };\n    }\n\n    return (childrenProps as ReactElement[]).reduce(\n      (\n        { items, searchElement }: { items: ReactElement[]; searchElement: null | ReactElement },\n        child\n      ) => {\n        switch (child.type) {\n          case MenuSearch:\n            return {\n              items,\n              searchElement: cloneElement(child, {\n                onKeyDown: (e: KeyboardEvent) =>\n                  handleKeyboardInteractions(e, {\n                    handleDown: handleArrowDown,\n                    handleUp: handleArrowUp,\n                  }),\n              }),\n            };\n          case MenuItem:\n          case MenuItemLink:\n            return {\n              items: items.concat(\n                child.props.disabled\n                  ? cloneElement(child, {\n                      onClick: () => undefined,\n                      onKeyDown: () => undefined,\n                      tabIndex: -1,\n                      disabled: true,\n                    })\n                  : cloneElement(child, {\n                      className: cx(child.props.className, menuItemClassName),\n                      item: child.props.item ?? items.length,\n                      // set focus on the first menu item if there is no search input, and set in the tab order\n                      onClick: chainEventHandlers(child.props.onClick, () => {\n                        onSelect?.(child.props.item ?? items.length);\n                      }),\n                      onKeyDown: (e: KeyboardEvent) =>\n                        handleKeyboardInteractions(e, {\n                          handleDown: handleArrowDown,\n                          handleUp: handleArrowUp,\n                        }),\n                    })\n              ),\n              searchElement,\n            };\n          case MenuDivider:\n            return { items: items.concat(child), searchElement };\n          default:\n            return { items, searchElement };\n        }\n      },\n      { items: [], searchElement: null }\n    );\n  }, [children, enableVirtualization, menuItemClassName, handleArrowDown, handleArrowUp, onSelect]);\n\n  if (enableVirtualization) {\n    return (\n      <MenuBase data-test-id={testId} isVirtual size={size}>\n        <ItemVirtualizer<T>\n          items={Children.toArray(reduceItems.items) as ReactElement[]}\n          searchElement={reduceItems.searchElement}\n          overscan={overscan}\n          menuItemClassName={menuItemClassName}\n          onSelect={onSelect}\n          itemHeight={itemHeight}\n          focusManager={focusManager}\n        />\n      </MenuBase>\n    );\n  }\n\n  return (\n    <MenuBase data-test-id={testId} size={size}>\n      {reduceItems.searchElement}\n      <MenuItemList role=\"presentation\">{reduceItems.items}</MenuItemList>\n    </MenuBase>\n  );\n};\n\ntype ItemVirtualizerProps<T> = Omit<ControlledMenuProps<T>, 'children'> & {\n  items: ReactElement[] | null;\n  searchElement?: ReactElement | null;\n  focusManager: FocusManager;\n};\n\nconst ItemVirtualizer = <T extends number | string>(props: ItemVirtualizerProps<T>) => {\n  const {\n    overscan,\n    searchElement,\n    itemHeight = 33,\n    menuItemClassName,\n    items: items,\n    focusManager,\n    onSelect,\n  } = props;\n\n  const menuId = useRef(`menu-ctrl-${useId()}`);\n\n  const focusedItemIndex = useRef<number | null>(null);\n  const parentRef = useRef<HTMLDivElement | null>(null);\n  const searchRef = useRef<HTMLInputElement>();\n\n  const [nextFocusValue, setNextFocusValue] = useState<number | null>(null);\n\n  const hasSearch = !!searchElement;\n\n  const lastVirtualItemIndex = items ? items.length - 1 : 0;\n\n  const rowVirtualizer = useVirtual({\n    size: items !== null ? items.length : 0,\n    parentRef,\n    estimateSize: useCallback(() => itemHeight, [itemHeight]),\n    overscan,\n  });\n\n  const focusSearchBar = useCallback(() => {\n    rowVirtualizer.scrollToIndex(0);\n    searchRef.current?.focus?.();\n  }, [rowVirtualizer]);\n\n  /**\n   * Scrolls to the menu item with the index provided and\n   * then manually focuses it using a side effect in useEffect\n   */\n  const focusMenuItem = useCallback(\n    (index: number) => {\n      rowVirtualizer.scrollToIndex(index);\n      setNextFocusValue(index);\n    },\n    [rowVirtualizer]\n  );\n\n  const handleKeyboardFocusInteraction = useCallback(\n    (direction: 'next' | 'previous') => {\n      if (focusedItemIndex.current === null || focusedItemIndex.current === undefined) {\n        return;\n      }\n      const nextIndex =\n        direction === 'next' ? focusedItemIndex.current + 1 : focusedItemIndex.current - 1;\n      const shouldWrap =\n        (direction === 'next' && focusedItemIndex.current === lastVirtualItemIndex) ||\n        (direction === 'previous' && focusedItemIndex.current === 0);\n      if (shouldWrap) {\n        // we are at the end of the list so we will\n        // scroll back to the beginning of the list\n        if (hasSearch) {\n          focusSearchBar();\n        } else {\n          // if at end, wrap to beginning, else focus last item\n          focusMenuItem(direction === 'next' ? 0 : lastVirtualItemIndex);\n        }\n        return;\n      }\n      switch (direction) {\n        case 'next':\n          rowVirtualizer.scrollToIndex(nextIndex);\n          focusManager.focusNext();\n          break;\n        case 'previous':\n          rowVirtualizer.scrollToIndex(nextIndex);\n          focusManager.focusPrevious();\n          break;\n        default:\n          break;\n      }\n    },\n    [focusManager, focusMenuItem, focusSearchBar, hasSearch, lastVirtualItemIndex, rowVirtualizer]\n  );\n\n  const getItemProps = useCallback(\n    (itemElem: ReactElement, index: number) => {\n      const childProps = itemElem.props as MenuItemProps<T>;\n      switch (itemElem.type) {\n        case MenuItem:\n        case MenuItemLink:\n          return {\n            className: cx(childProps.className, menuItemClassName),\n            // set focus on the first menu item if there is no search input, and set in the tab order\n            onKeyDown: childProps.disabled\n              ? () => undefined\n              : (e: KeyboardEvent) =>\n                  handleKeyboardFocusKeydown(e, {\n                    handleFocusBackward: handleKeyboardFocusInteraction,\n                    handleFocusForward: handleKeyboardFocusInteraction,\n                  }),\n            onFocus: chainEventHandlers(childProps.onFocus, () => {\n              focusedItemIndex.current = index;\n            }),\n            id: createItemId(index, menuId.current),\n            onBlur: chainEventHandlers(childProps.onBlur, () => {\n              focusedItemIndex.current = null;\n            }),\n            onClick: childProps.disabled\n              ? () => undefined\n              : chainEventHandlers(childProps.onClick, () => {\n                  onSelect?.(childProps.item as T);\n                }),\n          } as MenuItemProps<T>;\n        default:\n          return {};\n      }\n    },\n    [handleKeyboardFocusInteraction, menuItemClassName, onSelect]\n  );\n\n  useEffect(() => {\n    if (nextFocusValue !== null) {\n      requestAnimationFrame(() => {\n        const element = getNodeForIndex(nextFocusValue, menuId.current);\n        element?.focus();\n      });\n      setNextFocusValue(null);\n    }\n  }, [nextFocusValue]);\n\n  /**\n   * Calls handleFocusForward when the user is attempting to focus forward using\n   * tab or arrow keys. Calls handleFocusBackward when the users wants to move backward.\n   */\n  const handleKeyboardFocusKeydown = (\n    e: KeyboardEvent,\n    callbacks: Record<\n      'handleFocusForward' | 'handleFocusBackward',\n      (direction: 'next' | 'previous') => void\n    >\n  ) => {\n    const keyOps = ['Tab', 'ArrowUp', 'ArrowDown'];\n    if (keyOps.includes(e.key)) {\n      e.preventDefault();\n      e.stopPropagation();\n      if ((e.key === 'Tab' && e.shiftKey) || e.key === 'ArrowUp') {\n        callbacks.handleFocusBackward?.('previous');\n      } else if (e.key === 'ArrowDown' || e.key === 'Tab') {\n        callbacks.handleFocusForward?.('next');\n      }\n    }\n  };\n\n  const renderSearch = useMemo(\n    () =>\n      searchElement\n        ? cloneElement(searchElement, {\n            onKeyDown: (e: KeyboardEvent) =>\n              handleKeyboardFocusKeydown(e, {\n                handleFocusBackward: () => focusMenuItem(lastVirtualItemIndex),\n                handleFocusForward: () => focusMenuItem(0),\n              }),\n            ref: searchRef,\n          })\n        : null,\n    [searchElement, lastVirtualItemIndex, focusMenuItem]\n  );\n\n  const renderItems = useMemo(\n    () =>\n      rowVirtualizer.virtualItems.map((virtualRow) => {\n        if (!items) {\n          return null;\n        }\n        const elem = items[virtualRow.index];\n        return (\n          <div\n            key={virtualRow.index}\n            ref={\n              elem.type !== MenuItem || elem.type !== MenuItemLink\n                ? virtualRow.measureRef\n                : undefined\n            }\n            role=\"presentation\"\n            className={cx('VirtualMenu-item')}\n            style={{\n              transform: `translateY(${virtualRow.start}px)`,\n            }}\n          >\n            {cloneElement(elem, getItemProps(elem, virtualRow.index))}\n          </div>\n        );\n      }),\n    [rowVirtualizer.virtualItems, items, getItemProps]\n  );\n\n  return (\n    <>\n      {renderSearch}\n      <MenuItemList ref={parentRef} role=\"presentation\">\n        <div\n          role=\"presentation\"\n          className=\"VirtualMenu-item-list\"\n          style={{\n            height: `${rowVirtualizer.totalSize}px`,\n          }}\n        >\n          {renderItems}\n        </div>\n      </MenuItemList>\n    </>\n  );\n};\n\nexport { Menu, ItemVirtualizer };\nexport type { MenuProps, ItemVirtualizerProps };\n"],"names":["MenuBase","forwardRef","children","size","isVirtual","props","ref","classes","cx","displayName","MenuDivider","elementType","orientation","innerRef","testId","separatorProps","useSeparator","defaultElement","MenuItem","component","isHighlighted","icon","Icon","nested","groupHeader","item","disabled","className","tooltip","role","tooltipPlacement","onKeyDown","tooltipOptions","asChild","rest","Component","Slot","renderedItem","FocusRing","undefined","_jsxs","_Fragment","_jsx","Tooltip","display","MenuItemLink","to","useHistory","newTab","finalProps","Link","rel","target","MenuItemList","MenuSearch","ariaLabel","placeholder","TextField","Menu","menuItemClassName","onSelect","enableVirtualization","itemHeight","overscan","focusManager","useFocusManager","handleArrowDown","useCallback","focusNext","wrap","handleArrowUp","focusPrevious","reduceItems","useMemo","childrenProps","Children","toArray","searchElem","elements","forEach","child","type","concat","items","searchElement","reduce","cloneElement","e","handleKeyboardInteractions","handleDown","handleUp","onClick","tabIndex","length","chainEventHandlers","ItemVirtualizer","menuId","useRef","useId","focusedItemIndex","parentRef","searchRef","nextFocusValue","setNextFocusValue","useState","hasSearch","lastVirtualItemIndex","rowVirtualizer","useVirtual","estimateSize","focusSearchBar","scrollToIndex","current","focus","focusMenuItem","index","handleKeyboardFocusInteraction","direction","nextIndex","shouldWrap","getItemProps","itemElem","childProps","handleKeyboardFocusKeydown","handleFocusBackward","handleFocusForward","onFocus","id","createItemId","onBlur","useEffect","requestAnimationFrame","element","getNodeForIndex","callbacks","keyOps","includes","key","preventDefault","stopPropagation","shiftKey","renderSearch","renderItems","virtualItems","map","virtualRow","elem","measureRef","transform","start","height","totalSize"],"mappings":"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"}
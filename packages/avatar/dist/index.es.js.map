{"version":3,"file":"index.es.js","sources":["../src/utils.ts","../src/Avatar.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return useCallback(() => isMounted.current, []);\n};\n\nexport { useIsMounted };\n","import type { IconProps } from '@launchpad-ui/icons';\nimport type { ComponentType, HTMLAttributes } from 'react';\n\nimport { Person } from '@launchpad-ui/icons';\nimport { cx } from 'classix';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport styles from './styles/Avatar.module.css';\nimport { useIsMounted } from './utils';\n\ntype AvatarProps = HTMLAttributes<HTMLDivElement> & {\n  alt?: string;\n  url: string;\n  size?: 'tiny' | 'small' | 'medium' | 'large';\n  initials?: string;\n  defaultIcon?: ComponentType<IconProps>;\n  'data-test-id'?: string;\n};\n\nconst DIMENSIONS = {\n  tiny: '10',\n  small: '16',\n  medium: '24',\n  large: '40',\n};\n\nconst Avatar = ({\n  alt = '',\n  url,\n  defaultIcon: DefaultIcon = Person,\n  className,\n  initials,\n  size = 'medium',\n  'data-test-id': testId = 'avatar',\n  ...rest\n}: AvatarProps) => {\n  const isMounted = useIsMounted();\n  const [useDefaultAvatar, setUseDefaultAvatar] = useState(!url);\n  const [imageSource, setImageSource] = useState<string | null>(null);\n  const classes = cx(styles.Avatar, styles[`Avatar--${size}`], className);\n\n  const processImageSource = useCallback(async (res: Response) => {\n    if (res.status === 404 || res.headers.get('Content-type')?.includes('image/svg')) {\n      setImageSource(null);\n    } else {\n      const img = await res.blob();\n      setImageSource(URL.createObjectURL(img));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (url) {\n      fetch(url)\n        .then((res) => {\n          if (isMounted()) {\n            processImageSource(res);\n          }\n        })\n        .catch();\n    } else {\n      setImageSource('');\n    }\n  }, [url, processImageSource, isMounted]);\n\n  if (useDefaultAvatar || !imageSource) {\n    if (initials) {\n      const color = (initials.charCodeAt(0) + initials.charCodeAt(1)) % 5;\n\n      const initialsContainerClasses = cx(\n        classes,\n        styles['Avatar--initials'],\n        styles[`Avatar--color${color as 0 | 1 | 2 | 3 | 4}`]\n      );\n\n      return (\n        <div className={initialsContainerClasses} data-test-id={testId} {...rest}>\n          <span className={styles['Avatar-initials-content']}>{initials}</span>\n        </div>\n      );\n    } else {\n      return <DefaultIcon className={classes} data-test-id={testId} size={size} {...rest} />;\n    }\n  }\n\n  const dimension = DIMENSIONS[size];\n\n  return (\n    <img\n      {...rest}\n      alt={alt}\n      className={classes}\n      src={imageSource}\n      width={dimension}\n      height={dimension}\n      data-test-id={testId}\n      onError={() => setUseDefaultAvatar(true)}\n    />\n  );\n};\n\nexport { Avatar };\nexport type { AvatarProps };\n"],"names":["DIMENSIONS","tiny","small","medium","large","Avatar","alt","url","defaultIcon","DefaultIcon","Person","className","initials","size","testId","rest","isMounted","useIsMounted","useDefaultAvatar","setUseDefaultAvatar","useState","imageSource","setImageSource","classes","cx","styles","processImageSource","useCallback","res","status","headers","get","includes","img","blob","URL","createObjectURL","useEffect","then","catch","color","charCodeAt","initialsContainerClasses","dimension"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,MAAM,eAAe,MAAM;AACnB,QAAA,YAAY,OAAO,KAAK;AAE9B,YAAU,MAAM;AACd,cAAU,UAAU;AACpB,WAAO,MAAM;AACX,gBAAU,UAAU;AAAA,IAAA;AAAA,EAExB,GAAG,CAAE,CAAA;AAEL,SAAO,YAAY,MAAM,UAAU,SAAS,CAAE,CAAA;AAChD;ACMA,MAAMA,aAAa;AAAA,EACjBC,MAAM;AAAA,EACNC,OAAO;AAAA,EACPC,QAAQ;AAAA,EACRC,OAAO;AACT;AAEA,MAAMC,SAAS,CAAC;AAAA,EACdC,MAAM;AAAA,EACNC;AAAAA,EACAC,aAAaC,cAAcC;AAAAA,EAC3BC;AAAAA,EACAC;AAAAA,EACAC,OAAO;AAAA,EACP,gBAAgBC,SAAS;AAAA,KACtBC;AACQ,MAAM;AACjB,QAAMC,YAAYC;AAClB,QAAM,CAACC,kBAAkBC,mBAAmB,IAAIC,SAAS,CAACb,GAAG;AAC7D,QAAM,CAACc,aAAaC,cAAc,IAAIF,SAAwB,IAAI;AAClE,QAAMG,UAAUC,GAAGC,OAAOpB,QAAQoB,OAAQ,WAAUZ,SAASF,SAAS;AAEhEe,QAAAA,qBAAqBC,YAAY,OAAOC,QAAkB;;AAC1DA,QAAAA,IAAIC,WAAW,SAAOD,SAAIE,QAAQC,IAAI,cAAc,MAA9BH,mBAAiCI,SAAS,eAAc;AAChFV,qBAAe,IAAI;AAAA,IAAA,OACd;AACCW,YAAAA,MAAM,MAAML,IAAIM;AACPC,qBAAAA,IAAIC,gBAAgBH,GAAG,CAAC;AAAA,IACzC;AAAA,EACF,GAAG,CAAE,CAAA;AAELI,YAAU,MAAM;AACd,QAAI9B,KAAK;AACDA,YAAAA,GAAG,EACN+B,KAAMV,CAAQ,QAAA;AACb,YAAIZ,aAAa;AACfU,6BAAmBE,GAAG;AAAA,QACxB;AAAA,MAAA,CACD,EACAW,MAAO;AAAA,IAAA,OACL;AACLjB,qBAAe,EAAE;AAAA,IACnB;AAAA,EACC,GAAA,CAACf,KAAKmB,oBAAoBV,SAAS,CAAC;AAEnCE,MAAAA,oBAAoB,CAACG,aAAa;AACpC,QAAIT,UAAU;AACN4B,YAAAA,SAAS5B,SAAS6B,WAAW,CAAC,IAAI7B,SAAS6B,WAAW,CAAC,KAAK;AAElE,YAAMC,2BAA2BlB,GAC/BD,SACAE,OAAO,qBACPA,OAAQ,gBAAee,QAA6B;AAGtD,iCACE,OAAA;AAAA,QAAK,WAAWE;AAAAA,QAA0B,gBAAc5B;AAAAA,QAAO,GAAKC;AAAAA,QAAI,8BACtE,QAAA;AAAA,UAAM,WAAWU,OAAO;AAAA,UAA2B,UAAEb;AAAAA,QAAAA,CAAQ;AAAA,MAAA,CACzD;AAAA,IAAA,OAEH;AACL,iCAAQ,aAAW;AAAA,QAAC,WAAWW;AAAAA,QAAS,gBAAcT;AAAAA,QAAQ;AAAA,QAAW,GAAKC;AAAAA,MAAAA,CAAQ;AAAA,IACxF;AAAA,EACF;AAEA,QAAM4B,YAAY3C,WAAWa;AAE7B,6BACE,OAAA;AAAA,IAAA,GACME;AAAAA,IACJ;AAAA,IACA,WAAWQ;AAAAA,IACX,KAAKF;AAAAA,IACL,OAAOsB;AAAAA,IACP,QAAQA;AAAAA,IACR,gBAAc7B;AAAAA,IACd,SAAS,MAAMK,oBAAoB,IAAI;AAAA,EAAA,CACvC;AAEN;"}
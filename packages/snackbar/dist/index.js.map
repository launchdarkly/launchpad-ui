{"version":3,"file":"index.js","sources":["../src/Snackbar.tsx","../src/SnackbarCenter.tsx"],"sourcesContent":["import type { AnchorHTMLAttributes, HTMLAttributes, ReactElement, ReactNode } from 'react';\n\nimport { IconButton } from '@launchpad-ui/button';\nimport { Close, StatusIcon } from '@launchpad-ui/icons';\nimport { cx } from 'classix';\nimport { cloneElement } from 'react';\n\nimport styles from './styles/Snackbar.module.css';\n\ntype SnackbarBaseProps = {\n  kind: 'info' | 'error' | 'warning' | 'success';\n  header?: ReactNode;\n  description: ReactNode;\n  cta?: ReactElement<AnchorHTMLAttributes<HTMLAnchorElement>>;\n  onDismiss?: () => void;\n  'data-test-id'?: string;\n};\n\ntype SnackbarProps = Omit<HTMLAttributes<HTMLDivElement>, 'children'> & SnackbarBaseProps;\n\nconst Snackbar = ({\n  className,\n  kind,\n  header,\n  description,\n  cta,\n  onDismiss,\n  'data-test-id': testId = 'snackbar',\n  ...rest\n}: SnackbarProps) => {\n  const CTA =\n    cta &&\n    cloneElement(cta, {\n      onClick: onDismiss,\n    });\n\n  return (\n    <div\n      {...rest}\n      className={cx(styles.Snackbar, styles[`Snackbar--${kind}`], className)}\n      data-test-id={testId}\n      role=\"status\"\n    >\n      <StatusIcon kind={kind} className={styles['Snackbar-icon']} />\n      <div className={styles['Snackbar-content']}>\n        {header && <h4 className={styles['Snackbar-heading']}>{header}</h4>}\n        <span className={styles['Snackbar-description']}>{description}</span> {CTA}\n      </div>\n      <IconButton\n        icon={<Close size=\"small\" />}\n        size=\"small\"\n        aria-label=\"Dismiss\"\n        kind=\"close\"\n        className={styles['Snackbar-close']}\n        data-test-id=\"snackbar-dismiss\"\n        onClick={onDismiss}\n      />\n    </div>\n  );\n};\n\nexport { Snackbar };\nexport type { SnackbarBaseProps, SnackbarProps };\n","import type { SnackbarBaseProps } from './Snackbar';\n\nimport { cx } from 'classix';\nimport { AnimatePresence, LazyMotion, m } from 'framer-motion';\n\nimport { Snackbar } from './Snackbar';\nimport styles from './styles/SnackbarCenter.module.css';\n\nconst loadFeatures = () =>\n  import(\n    /* webpackChunkName: \"lp-snackbar-framer-features\" */\n    /* webpackExports: \"domAnimation\" */\n    'framer-motion'\n  ).then((res) => res.domAnimation);\n\ntype SnackbarRecord = SnackbarBaseProps & {\n  _id: string;\n};\n\ntype SnackbarCenterProps = {\n  className?: string;\n  snackbars: SnackbarRecord[];\n  dismissSnackbar(snackbarId: string): void;\n};\n\nconst SnackbarCenter = ({ snackbars, dismissSnackbar, className }: SnackbarCenterProps) => {\n  const classes = cx(styles.SnackbarCenter, className);\n\n  const handleDismiss = (item: SnackbarRecord) => {\n    item.onDismiss?.();\n    dismissSnackbar(item._id);\n  };\n\n  return (\n    <LazyMotion strict features={loadFeatures}>\n      <div className={classes}>\n        <AnimatePresence initial={false}>\n          {snackbars.map((item) => (\n            <m.div\n              className={styles['SnackbarCenter-item']}\n              key={item._id}\n              transition={{ ease: 'easeInOut' }}\n              initial={{ x: '100%' }}\n              animate={{ x: '0%' }}\n              exit={{ x: '100%' }}\n            >\n              <Snackbar\n                kind={item.kind}\n                description={item.description}\n                header={item.header}\n                cta={item.cta}\n                onDismiss={() => handleDismiss(item)}\n              />\n            </m.div>\n          ))}\n        </AnimatePresence>\n      </div>\n    </LazyMotion>\n  );\n};\n\nexport { SnackbarCenter };\nexport type { SnackbarCenterProps, SnackbarRecord };\n"],"names":["cloneElement","jsxs","cx","styles","jsx","StatusIcon","IconButton","Close","LazyMotion","AnimatePresence","m"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,WAAW,CAAC;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB,SAAS;AAAA,KACtB;AACL,MAAqB;AACb,QAAA,MACJ,OACAA,MAAA,aAAa,KAAK;AAAA,IAChB,SAAS;AAAA,EAAA,CACV;AAGD,SAAAC,2BAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,GAAG;AAAA,MACJ,WAAWC,QAAAA,GAAGC,SAAO,UAAUA,SAAO,aAAa,SAAS,SAAS;AAAA,MACrE,gBAAc;AAAA,MACd,MAAK;AAAA,MAEL,UAAA;AAAA,QAAAC,2BAAA,IAACC,MAAW,YAAA,EAAA,MAAY,WAAWF,SAAO,kBAAkB;AAAA,QAC3DF,2BAAA,KAAA,OAAA,EAAI,WAAWE,SAAO,qBACpB,UAAA;AAAA,UAAA,UAAWC,2BAAAA,IAAA,MAAA,EAAG,WAAWD,SAAO,qBAAsB,UAAO,QAAA;AAAA,UAC7DC,+BAAA,QAAA,EAAK,WAAWD,SAAO,yBAA0B,UAAY,aAAA;AAAA,UAAO;AAAA,UAAE;AAAA,QAAA,GACzE;AAAA,QACAC,2BAAA;AAAA,UAACE,OAAA;AAAA,UAAA;AAAA,YACC,MAAMF,2BAAAA,IAACG,MAAAA,OAAM,EAAA,MAAK,QAAQ,CAAA;AAAA,YAC1B,MAAK;AAAA,YACL,cAAW;AAAA,YACX,MAAK;AAAA,YACL,WAAWJ,SAAO;AAAA,YAClB,gBAAa;AAAA,YACb,SAAS;AAAA,UAAA;AAAA,QACX;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAGN;;;;;;ACnDA,MAAM,eAAe,MACnB;AAAA;AAAA;AAAA,EAGE;AAAA,EACA,KAAK,CAAC,QAAQ,IAAI,YAAY;AAYlC,MAAM,iBAAiB,CAAC,EAAE,WAAW,iBAAiB,gBAAqC;AACzF,QAAM,UAAUD,QAAA,GAAG,OAAO,gBAAgB,SAAS;AAE7C,QAAA,gBAAgB,CAAC,SAAyB;;AAC9C,eAAK,cAAL;AACA,oBAAgB,KAAK,GAAG;AAAA,EAAA;AAG1B,wCACGM,aAAAA,YAAW,EAAA,QAAM,MAAC,UAAU,cAC3B,UAACJ,+BAAA,OAAA,EAAI,WAAW,SACd,yCAACK,aAAgB,iBAAA,EAAA,SAAS,OACvB,UAAU,UAAA,IAAI,CAAC,SACdL,2BAAA;AAAA,IAACM,aAAAA,EAAE;AAAA,IAAF;AAAA,MACC,WAAW,OAAO;AAAA,MAElB,YAAY,EAAE,MAAM,YAAY;AAAA,MAChC,SAAS,EAAE,GAAG,OAAO;AAAA,MACrB,SAAS,EAAE,GAAG,KAAK;AAAA,MACnB,MAAM,EAAE,GAAG,OAAO;AAAA,MAElB,UAAAN,2BAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB,QAAQ,KAAK;AAAA,UACb,KAAK,KAAK;AAAA,UACV,WAAW,MAAM,cAAc,IAAI;AAAA,QAAA;AAAA,MACrC;AAAA,IAAA;AAAA,IAZK,KAAK;AAAA,EAAA,CAcb,EACH,CAAA,GACF,EACF,CAAA;AAEJ;;;"}